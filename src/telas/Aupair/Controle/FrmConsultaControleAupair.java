/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.Aupair.Controle;


import controller.AupairController;
import controller.ParametrosProdutosController;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import model.Aupair;
import model.Cliente;
import model.Controleaupair;
import model.Parametrosprodutos;
import model.Unidadenegocio;
import model.view.Viewcontroleaupair;
import Singleton.ConexaoSingleton;
import telas.Arquivo.FrmConsultaArquivos;
import telas.FollowUp.JTableRenderer;
import telas.FrmSalvarAquivo;
import telas.FrmSituacaoControle;
import telas.Invoice.FrmCadastrarInvoiceController;
import telas.Usuarios.UsuarioLogadoBean;
import util.Formatacao;
import util.clickColunas;

/**
 *
 * @author Wolverine
 */
public class FrmConsultaControleAupair extends javax.swing.JFrame implements  IControleAupair{
    
    private ConsultaControleAupairTableModel modelVendas;
    private List<Viewcontroleaupair> listaVendas;
    private UsuarioLogadoBean usuarioLogadoBean;
    private int numero;

    /**
     * Creates new form FrmConsultaControleCurso
     */
    public FrmConsultaControleAupair(UsuarioLogadoBean usuarioLogadoBean) {
        this.usuarioLogadoBean = usuarioLogadoBean;
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo/logotela.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        carregarModelVendas();
        this.setVisible(true);
        JTableHeader header = vendasCursojTable.getTableHeader();
        header.addMouseListener(new clickColunas(this));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BarradeTarefasjToolBar3 = new javax.swing.JToolBar();
        AdicionarjButton3 = new javax.swing.JButton();
        imprimirjButton2 = new javax.swing.JButton();
        SeparadordeTarefasjSeparator = new javax.swing.JToolBar.Separator();
        imprimirjButton1 = new javax.swing.JButton();
        imprimirjButton3 = new javax.swing.JButton();
        imprimirjButton4 = new javax.swing.JButton();
        imprimirjButton5 = new javax.swing.JButton();
        FecharrjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        vendasCursojTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        nomeClientejTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Controle de Aupair");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        BarradeTarefasjToolBar3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        BarradeTarefasjToolBar3.setFloatable(false);
        BarradeTarefasjToolBar3.setRollover(true);

        AdicionarjButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/editar.png"))); // NOI18N
        AdicionarjButton3.setText("Atualizar");
        AdicionarjButton3.setToolTipText("Atualizar");
        AdicionarjButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AdicionarjButton3.setMaximumSize(new java.awt.Dimension(80, 90));
        AdicionarjButton3.setMinimumSize(new java.awt.Dimension(80, 90));
        AdicionarjButton3.setName(""); // NOI18N
        AdicionarjButton3.setPreferredSize(new java.awt.Dimension(80, 90));
        AdicionarjButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        AdicionarjButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdicionarjButton3ActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(AdicionarjButton3);

        imprimirjButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/finalizar.png"))); // NOI18N
        imprimirjButton2.setText("Finalizar");
        imprimirjButton2.setToolTipText("Finalizar");
        imprimirjButton2.setFocusable(false);
        imprimirjButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imprimirjButton2.setMaximumSize(new java.awt.Dimension(80, 90));
        imprimirjButton2.setMinimumSize(new java.awt.Dimension(80, 90));
        imprimirjButton2.setPreferredSize(new java.awt.Dimension(80, 90));
        imprimirjButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imprimirjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirjButton2ActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(imprimirjButton2);
        BarradeTarefasjToolBar3.add(SeparadordeTarefasjSeparator);

        imprimirjButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/pesquisar.png"))); // NOI18N
        imprimirjButton1.setText("Pesquisar");
        imprimirjButton1.setToolTipText("Pesquisar ");
        imprimirjButton1.setFocusable(false);
        imprimirjButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imprimirjButton1.setMaximumSize(new java.awt.Dimension(80, 90));
        imprimirjButton1.setMinimumSize(new java.awt.Dimension(80, 90));
        imprimirjButton1.setPreferredSize(new java.awt.Dimension(80, 90));
        imprimirjButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imprimirjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirjButton1ActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(imprimirjButton1);

        imprimirjButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/exportar.png"))); // NOI18N
        imprimirjButton3.setText("Exportar");
        imprimirjButton3.setToolTipText("Exportar para  Excel");
        imprimirjButton3.setFocusable(false);
        imprimirjButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imprimirjButton3.setMaximumSize(new java.awt.Dimension(80, 90));
        imprimirjButton3.setMinimumSize(new java.awt.Dimension(80, 90));
        imprimirjButton3.setPreferredSize(new java.awt.Dimension(80, 90));
        imprimirjButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imprimirjButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirjButton3ActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(imprimirjButton3);

        imprimirjButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/arquivos.png"))); // NOI18N
        imprimirjButton4.setText("Arquivo");
        imprimirjButton4.setToolTipText("Upload de Arquivo");
        imprimirjButton4.setFocusable(false);
        imprimirjButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imprimirjButton4.setMaximumSize(new java.awt.Dimension(80, 90));
        imprimirjButton4.setMinimumSize(new java.awt.Dimension(80, 90));
        imprimirjButton4.setPreferredSize(new java.awt.Dimension(80, 90));
        imprimirjButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imprimirjButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirjButton4ActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(imprimirjButton4);

        imprimirjButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/SITUACAO.png"))); // NOI18N
        imprimirjButton5.setText("Situação");
        imprimirjButton5.setToolTipText("Situação");
        imprimirjButton5.setFocusable(false);
        imprimirjButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imprimirjButton5.setMaximumSize(new java.awt.Dimension(80, 90));
        imprimirjButton5.setMinimumSize(new java.awt.Dimension(80, 90));
        imprimirjButton5.setPreferredSize(new java.awt.Dimension(80, 90));
        imprimirjButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imprimirjButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirjButton5ActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(imprimirjButton5);

        FecharrjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/fechar.png"))); // NOI18N
        FecharrjButton.setText("Fechar");
        FecharrjButton.setToolTipText("Fechar");
        FecharrjButton.setFocusable(false);
        FecharrjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        FecharrjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        FecharrjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        FecharrjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        FecharrjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        FecharrjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FecharrjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(FecharrjButton);

        vendasCursojTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Data Inscrição", "Ínicio do Curso", "Nome", "E-mail", "Idade", "Telefone", "Unidade", "Agente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vendasCursojTable);
        if (vendasCursojTable.getColumnModel().getColumnCount() > 0) {
            vendasCursojTable.getColumnModel().getColumn(0).setResizable(false);
            vendasCursojTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            vendasCursojTable.getColumnModel().getColumn(1).setResizable(false);
            vendasCursojTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            vendasCursojTable.getColumnModel().getColumn(2).setResizable(false);
            vendasCursojTable.getColumnModel().getColumn(2).setPreferredWidth(150);
            vendasCursojTable.getColumnModel().getColumn(3).setResizable(false);
            vendasCursojTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            vendasCursojTable.getColumnModel().getColumn(4).setResizable(false);
            vendasCursojTable.getColumnModel().getColumn(4).setPreferredWidth(30);
            vendasCursojTable.getColumnModel().getColumn(5).setResizable(false);
            vendasCursojTable.getColumnModel().getColumn(5).setPreferredWidth(50);
            vendasCursojTable.getColumnModel().getColumn(6).setResizable(false);
            vendasCursojTable.getColumnModel().getColumn(6).setPreferredWidth(100);
            vendasCursojTable.getColumnModel().getColumn(7).setResizable(false);
            vendasCursojTable.getColumnModel().getColumn(7).setPreferredWidth(100);
        }

        jLabel1.setText("Nome do Cliente");

        nomeClientejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeClientejTextFieldActionPerformed(evt);
            }
        });
        nomeClientejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nomeClientejTextFieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1317, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(nomeClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(322, 322, 322)
                    .addComponent(BarradeTarefasjToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(365, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(344, Short.MAX_VALUE)
                    .addComponent(BarradeTarefasjToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AdicionarjButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdicionarjButton3ActionPerformed
        if (usuarioLogadoBean.getAcesso().getPcaatualizar()==1){
            int linha = vendasCursojTable.getSelectedRow();
            if (linha>=0){
                new FrmAtulizarControleAupair(listaVendas.get(linha),usuarioLogadoBean);
            }
        }else JOptionPane.showMessageDialog(rootPane, "Acesso Negado");
    }//GEN-LAST:event_AdicionarjButton3ActionPerformed

    private void imprimirjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirjButton1ActionPerformed
        new FrmFiltrarControleAupair(usuarioLogadoBean, this);
    }//GEN-LAST:event_imprimirjButton1ActionPerformed

    private void FecharrjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FecharrjButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_FecharrjButtonActionPerformed

    private void imprimirjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirjButton2ActionPerformed
        if (usuarioLogadoBean.getAcesso().getPcafinalizar()==1){
            int linha =vendasCursojTable.getSelectedRow();
            if (linha>=0){
                AupairController aupairController = new AupairController();
                Aupair aupair =  aupairController.consultarAupair(listaVendas.get(linha).getIdVendas());
                if (aupair!=null){
                    aupair.setControle("Finalizado");
                    aupairController.salvar(aupair);
                }
                Controleaupair controle = aupairController.consultarControleAupair(listaVendas.get(linha).getIdVendas());
                if (controle!=null){
                    controle.setFinalizado("Finalizado");
                    aupairController.salvar(controle);
                }
                carregarModelVendas();
            }
        }else JOptionPane.showMessageDialog(rootPane, "Acesso Negado");
    }//GEN-LAST:event_imprimirjButton2ActionPerformed

    private void imprimirjButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirjButton3ActionPerformed
        new FrmSalvarAquivo(this);
    }//GEN-LAST:event_imprimirjButton3ActionPerformed

    private void imprimirjButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirjButton4ActionPerformed
        if (usuarioLogadoBean.getAcesso().getUploadArquivo() == 1) {
            int linha = vendasCursojTable.getSelectedRow();
            if (linha >= 0) {
                new FrmConsultaArquivos(usuarioLogadoBean, listaVendas.get(linha).getIdVendas(), listaVendas.get(linha).getNomeCliente(), listaVendas.get(linha).getIdUnidadeNegocio(), this);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Selecione um cliente");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado");
        }
        
    }//GEN-LAST:event_imprimirjButton4ActionPerformed

    private void imprimirjButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirjButton5ActionPerformed
        int linha = vendasCursojTable.getSelectedRow();
        if (linha>=0){
            AupairController aupairController = new AupairController();
            Controleaupair controle = aupairController.consultarControleAupair(listaVendas.get(linha).getIdVendas());
            if (controle!=null){
                new FrmSituacaoControle(controle, this);
            }
        }
    }//GEN-LAST:event_imprimirjButton5ActionPerformed

    private void nomeClientejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeClientejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeClientejTextFieldActionPerformed

    private void nomeClientejTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomeClientejTextFieldKeyPressed
       if (evt.getKeyCode() == evt.VK_ENTER) {
            carregarModelVendas();
        }
    }//GEN-LAST:event_nomeClientejTextFieldKeyPressed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdicionarjButton3;
    private javax.swing.JToolBar BarradeTarefasjToolBar3;
    private javax.swing.JButton FecharrjButton;
    private javax.swing.JToolBar.Separator SeparadordeTarefasjSeparator;
    private javax.swing.JButton imprimirjButton1;
    private javax.swing.JButton imprimirjButton2;
    private javax.swing.JButton imprimirjButton3;
    private javax.swing.JButton imprimirjButton4;
    private javax.swing.JButton imprimirjButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomeClientejTextField;
    private javax.swing.JTable vendasCursojTable;
    // End of variables declaration//GEN-END:variables

public void carregarModelVendas(){
        String sql = null;
        String order = null;
        if (usuarioLogadoBean.getUsuario().getTipo().equalsIgnoreCase("Gerencial")){
            sql = "Select v from Viewcontroleaupair v where v.finalizado<>'Finalizado' and situacao<>'Cancelado' and v.nomeCliente like '%" + nomeClientejTextField.getText() + "%' ";
        }else sql = "Select v from Viewcontroleaupair v where v.finalizado<>'Finalizado' and v.idUnidadeNegocio="+ 
                usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio() + " and situacao<>'Cancelado' and v.nomeCliente like '%" + nomeClientejTextField.getText() + "%' ";
        if (numero==0){
            order =  " order by v.situacao";
        }else if (numero==1){
            order = "  order by v.dataEmbarque";
        }else if (numero==2){
             order = " order by v.dataVenda";
        }else if (numero==3){
             order = " order by v.nomeCliente";
        }else if (numero==6){
            order = " order by v.nomeFantasia";
        }else if (numero==7){
            order = " order by v.nomeConsultor";
        }else if (numero==8){
            order = " order by v.Sponsor";
        }
        if (order!=null){
            sql = sql + order;
        }
        AupairController aupairController = new AupairController();
        listaVendas = aupairController.consultaControleAupair(sql);
        if (listaVendas==null){
            listaVendas = new ArrayList<Viewcontroleaupair>();
        }
        modelVendas = new ConsultaControleAupairTableModel(listaVendas);
        vendasCursojTable.setModel(modelVendas);
        TableColumnModel ColumnModel = vendasCursojTable.getColumnModel();  
        JTableRenderer renderer = new JTableRenderer();  
        renderer.setHorizontalAlignment(SwingConstants.CENTER);
        vendasCursojTable.getColumnModel().getColumn(0).setCellRenderer(renderer);
        vendasCursojTable.getColumnModel().getColumn(0).setPreferredWidth(80);
        vendasCursojTable.getColumnModel().getColumn(1).setPreferredWidth(50);
        vendasCursojTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        vendasCursojTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        vendasCursojTable.getColumnModel().getColumn(4).setPreferredWidth(150);
        vendasCursojTable.getColumnModel().getColumn(5).setPreferredWidth(100);
        vendasCursojTable.getColumnModel().getColumn(6).setPreferredWidth(30);
        vendasCursojTable.getColumnModel().getColumn(7).setPreferredWidth(50);
        vendasCursojTable.getColumnModel().getColumn(8).setPreferredWidth(100);
        vendasCursojTable.repaint();
    }

    @Override
    public void setCliente(Cliente cliente) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setFiltrarControleAupair(Cliente cliente, Unidadenegocio unidadeNegocio, Date dataInicioPrevista, Date dataTerminoPrevista, String situacao, int idConsultor) {
        boolean condicao = false;
        String sql = null;
        sql = "Select v from Viewcontroleaupair v where ";
        
        if (cliente!=null){
            sql = sql + " v.idCliente=" + cliente.getIdcliente() + " ";
            condicao= true;
        }
        if (unidadeNegocio != null) {
            if (condicao) {
                sql = sql + " and v.idUnidadeNegocio=" + unidadeNegocio.getIdunidadeNegocio() + " ";
            } else {
                sql = sql + " v.idUnidadeNegocio=" + unidadeNegocio.getIdunidadeNegocio() + " ";
                condicao = true;
            }
            if (idConsultor > 0) {
                sql = sql + " and v.idusuario=" + idConsultor + " ";
            }
        }
        if ((dataInicioPrevista!=null) && (dataTerminoPrevista!=null)){
            if (condicao){
                sql = sql + " and v.dataInicioPretendida01>='" + Formatacao.ConvercaoDataSql(dataInicioPrevista) + "' " +
                    " or v.dataInicioPretendida02>='" + Formatacao.ConvercaoDataSql(dataInicioPrevista) + "' " +
                    " and v.dataTerminoPretendida01<='" + Formatacao.ConvercaoDataSql(dataTerminoPrevista) + "' " +
                    " or v.dataTerminoPretendida02<='" + Formatacao.ConvercaoDataSql(dataTerminoPrevista) + "' ";
            }else {
                sql = sql + " v.dataInicioPretendida01>='" + Formatacao.ConvercaoDataSql(dataInicioPrevista) + "' " +
                    " or v.dataInicioPretendida02>='" + Formatacao.ConvercaoDataSql(dataInicioPrevista) + "' " +
                    " and v.dataTerminoPretendida01<='" + Formatacao.ConvercaoDataSql(dataTerminoPrevista) + "' " +
                    " or v.dataTerminoPretendida02<='" + Formatacao.ConvercaoDataSql(dataTerminoPrevista) + "' ";
                condicao=true;
            }
            
        }
        if (!situacao.equalsIgnoreCase("Todas")){
            if (condicao){
                sql = sql + " and v.situacao='" + situacao + "' ";
            }else {
                sql = sql + " v.situacao='" + situacao + "' ";
                condicao=true;
            }
        }
        sql = sql + " order by v.dataVenda";        
        AupairController aupairController = new AupairController();
        listaVendas = aupairController.consultaControleAupair(sql);
        if (listaVendas==null){
            listaVendas = new ArrayList<Viewcontroleaupair>();
        }
        modelVendas = new ConsultaControleAupairTableModel(listaVendas);
        vendasCursojTable.setModel(modelVendas);
        TableColumnModel ColumnModel = vendasCursojTable.getColumnModel();  
        JTableRenderer renderer = new JTableRenderer();  
        renderer.setHorizontalAlignment(SwingConstants.CENTER);
        vendasCursojTable.getColumnModel().getColumn(0).setCellRenderer(renderer);
        vendasCursojTable.getColumnModel().getColumn(0).setPreferredWidth(80);
        vendasCursojTable.getColumnModel().getColumn(1).setPreferredWidth(50);
        vendasCursojTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        vendasCursojTable.getColumnModel().getColumn(3).setPreferredWidth(150);
        vendasCursojTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        vendasCursojTable.getColumnModel().getColumn(5).setPreferredWidth(30);
        vendasCursojTable.getColumnModel().getColumn(6).setPreferredWidth(50);
        vendasCursojTable.getColumnModel().getColumn(7).setPreferredWidth(100);
        vendasCursojTable.repaint();
    }

    @Override
    public void cancelarFiltroCurso() {
        carregarModelVendas();
    }

    @Override
    public void exportarExcel(String caminho, String nomeArquivo) {
        String localIni = System.getProperty("user.dir");
        localIni = localIni + "/systm.properties";
        File file = new File(localIni);
        Properties props = new Properties();
        FileInputStream fis = null;
        try {
            fis = new FileInputStream(file);
            //lê os dados que estão no arquivo
            props.load(fis);
            fis.close();
        } catch (IOException ex) {
            Logger.getLogger(ConexaoSingleton.class.getName()).log(Level.SEVERE, null, ex);
        }
        String banco = props.getProperty("banco");
        String local = props.getProperty("local");
        String senha = props.getProperty("senha");
        String usuario = props.getProperty("usuario");
        String porta = props.getProperty("porta");
        AupairController aupairController = new AupairController();
        int idunidade=0;
        if (!usuarioLogadoBean.getUsuario().getTipo().equalsIgnoreCase("Gerencial")){
            idunidade = usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio();
        }
        aupairController.ExportarExcel(nomeArquivo, local, porta, senha, banco, usuario, caminho, idunidade);
    }

    @Override
    public void setUnidadeNegocio(Unidadenegocio unidadeNegocio) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    @Override
    public void setNumeroColuna(int numero) {
        this.numero = numero;
        carregarModelVendas();
    }

    @Override
    public void setModel() {
        carregarModelVendas();
    }

   @Override
    public void setDocAnexado(String tipoArquivo, int idVenda, int idControle) {
        AupairController aupairController = new AupairController();
        Controleaupair controle;
        if (tipoArquivo.equalsIgnoreCase("Ficha Assinada")) {
            controle = aupairController.consultarControleAupair(idVenda);
            if (controle != null) {
                if (controle.getDocanexado().equalsIgnoreCase("N")) {
                    controle.setDocanexado("F");
                } else if (controle.getDocanexado().equalsIgnoreCase("C")) {
                    controle.setDocanexado("T");
                }
                aupairController.salvar(controle);
            }
        } else if (tipoArquivo.equalsIgnoreCase("Contrato Assinado")) {
            controle = aupairController.consultarControleAupair(idVenda);
            if (controle != null) {
                if (controle.getDocanexado().equalsIgnoreCase("N")) {
                    controle.setDocanexado("C");
                } else if (controle.getDocanexado().equalsIgnoreCase("F")) {
                    controle.setDocanexado("T");
                }
                aupairController.salvar(controle);
            }
        }
    }
}
