/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.OrcamentoCurso;

import controller.OrcamentoCursoController;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import model.Cambio;
import model.Cliente;
import model.Orcamentocurso;
import model.Unidadenegocio;
import model.Usuario;
import model.view.Vieworcamentocurso;
import telas.PesquisaProdutos.FrmPesquisarProdutos;
import telas.Usuarios.UsuarioLogadoBean;
import util.Formatacao;
import util.relatoriosJasper;

/**
 *
 * @author Wolverine
 */
public class FrmConsultarOrcamentoCurso extends javax.swing.JFrame implements IConsultaOrcamento{
    
    private List<Vieworcamentocurso> listaVendas;
    private ConsultaVendasTableModel modelVendas;
    
    private UsuarioLogadoBean usuarioLogadoBean;
    List<Cambio> listaCambio;
    private int linha;

    /**
     * Creates new form FrmConsultarCursos
     */
    public FrmConsultarOrcamentoCurso(UsuarioLogadoBean usuarioLogadoBean, List<Cambio> listaCambio) {
        this.listaCambio = listaCambio;
        this.usuarioLogadoBean = usuarioLogadoBean;
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo/logotela.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        carregarModelVendas();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orcamentoCursojTable = new javax.swing.JTable();
        BarradeTarefasjToolBar3 = new javax.swing.JToolBar();
        AdicionarjButton3 = new javax.swing.JButton();
        EditarjButton = new javax.swing.JButton();
        excluirjButton = new javax.swing.JButton();
        duplicarjButton = new javax.swing.JButton();
        SeparadordeTarefasjSeparator = new javax.swing.JToolBar.Separator();
        imprimirjButton = new javax.swing.JButton();
        imprimirjButton1 = new javax.swing.JButton();
        imprimirjButton3 = new javax.swing.JButton();
        FecharrjButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nomeClientejTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta Orçamento de Cursos");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        orcamentoCursojTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cliente", "Data Inscrição", "Curso", "Unidade", "Agente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orcamentoCursojTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orcamentoCursojTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(orcamentoCursojTable);
        if (orcamentoCursojTable.getColumnModel().getColumnCount() > 0) {
            orcamentoCursojTable.getColumnModel().getColumn(0).setResizable(false);
            orcamentoCursojTable.getColumnModel().getColumn(0).setPreferredWidth(200);
            orcamentoCursojTable.getColumnModel().getColumn(1).setResizable(false);
            orcamentoCursojTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            orcamentoCursojTable.getColumnModel().getColumn(2).setResizable(false);
            orcamentoCursojTable.getColumnModel().getColumn(2).setPreferredWidth(200);
            orcamentoCursojTable.getColumnModel().getColumn(3).setResizable(false);
            orcamentoCursojTable.getColumnModel().getColumn(3).setPreferredWidth(200);
            orcamentoCursojTable.getColumnModel().getColumn(4).setResizable(false);
            orcamentoCursojTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        BarradeTarefasjToolBar3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        BarradeTarefasjToolBar3.setFloatable(false);
        BarradeTarefasjToolBar3.setRollover(true);

        AdicionarjButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/adicionar.png"))); // NOI18N
        AdicionarjButton3.setText("Novo");
        AdicionarjButton3.setToolTipText("Novo Orçamento Curso");
        AdicionarjButton3.setEnabled(false);
        AdicionarjButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AdicionarjButton3.setMaximumSize(new java.awt.Dimension(80, 90));
        AdicionarjButton3.setMinimumSize(new java.awt.Dimension(80, 90));
        AdicionarjButton3.setName(""); // NOI18N
        AdicionarjButton3.setPreferredSize(new java.awt.Dimension(80, 90));
        AdicionarjButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        AdicionarjButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdicionarjButton3ActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(AdicionarjButton3);

        EditarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/editar.png"))); // NOI18N
        EditarjButton.setText("Editar");
        EditarjButton.setToolTipText("Editar Orçamento Curso");
        EditarjButton.setEnabled(false);
        EditarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EditarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        EditarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        EditarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        EditarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        EditarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(EditarjButton);

        excluirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/cancelar.png"))); // NOI18N
        excluirjButton.setText("Cancelar");
        excluirjButton.setToolTipText("Excluir Orçamento");
        excluirjButton.setEnabled(false);
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        excluirjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        excluirjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(excluirjButton);

        duplicarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/bt_systm_duplicar.png"))); // NOI18N
        duplicarjButton.setText("Duplicar");
        duplicarjButton.setToolTipText("Pesquisar ");
        duplicarjButton.setEnabled(false);
        duplicarjButton.setFocusable(false);
        duplicarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        duplicarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        duplicarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        duplicarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        duplicarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        duplicarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duplicarjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(duplicarjButton);
        BarradeTarefasjToolBar3.add(SeparadordeTarefasjSeparator);

        imprimirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/imprimir.png"))); // NOI18N
        imprimirjButton.setText("Imprimir");
        imprimirjButton.setToolTipText("Imprimir Documentos");
        imprimirjButton.setEnabled(false);
        imprimirjButton.setFocusable(false);
        imprimirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imprimirjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        imprimirjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        imprimirjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        imprimirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imprimirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(imprimirjButton);

        imprimirjButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/pesquisar.png"))); // NOI18N
        imprimirjButton1.setText("Pesquisar");
        imprimirjButton1.setToolTipText("Pesquisar Orçamento");
        imprimirjButton1.setFocusable(false);
        imprimirjButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imprimirjButton1.setMaximumSize(new java.awt.Dimension(80, 90));
        imprimirjButton1.setMinimumSize(new java.awt.Dimension(80, 90));
        imprimirjButton1.setPreferredSize(new java.awt.Dimension(80, 90));
        imprimirjButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imprimirjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirjButton1ActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(imprimirjButton1);

        imprimirjButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/pesquisar.png"))); // NOI18N
        imprimirjButton3.setText("E-mail");
        imprimirjButton3.setToolTipText("Enviar E-mail");
        imprimirjButton3.setFocusable(false);
        imprimirjButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imprimirjButton3.setMaximumSize(new java.awt.Dimension(80, 90));
        imprimirjButton3.setMinimumSize(new java.awt.Dimension(80, 90));
        imprimirjButton3.setPreferredSize(new java.awt.Dimension(80, 90));
        imprimirjButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imprimirjButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirjButton3ActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(imprimirjButton3);

        FecharrjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/fechar.png"))); // NOI18N
        FecharrjButton.setText("Fechar");
        FecharrjButton.setToolTipText("Fechar");
        FecharrjButton.setFocusable(false);
        FecharrjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        FecharrjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        FecharrjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        FecharrjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        FecharrjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        FecharrjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FecharrjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar3.add(FecharrjButton);

        jLabel1.setText("Nome do Cliente");

        nomeClientejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nomeClientejTextFieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(nomeClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BarradeTarefasjToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(BarradeTarefasjToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AdicionarjButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdicionarjButton3ActionPerformed
        if (usuarioLogadoBean.getAcesso().getCursosAdicionar()==1){
            if (listaCambio!=null){
                new FrmFichaOrcamentoCurso(0, usuarioLogadoBean, this, listaCambio.get(0).getData(), false);
            }else {
                JOptionPane.showMessageDialog(rootPane, "Cambio do dia ainda não liberado");
            }
        }else JOptionPane.showMessageDialog(rootPane,"Acesso Negado");
        
    }//GEN-LAST:event_AdicionarjButton3ActionPerformed

    private void EditarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarjButtonActionPerformed
        if (usuarioLogadoBean.getAcesso().getCursosEditar() == 1) {
            int linha = orcamentoCursojTable.getSelectedRow();
            if (linha >= 0) {
                new FrmFichaOrcamentoCurso(listaVendas.get(linha).getIdorcamentoCurso(), usuarioLogadoBean, this, listaCambio.get(0).getData(), false);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado");
        }
    }//GEN-LAST:event_EditarjButtonActionPerformed

    private void imprimirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirjButtonActionPerformed
        linha = orcamentoCursojTable.getSelectedRow();
        if (linha >= 0) {
            imprimirFichaOrcamentoCurso();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma ficha");
        }
    }//GEN-LAST:event_imprimirjButtonActionPerformed

    private void orcamentoCursojTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orcamentoCursojTableMouseClicked
        EditarjButton.setEnabled(true);
        imprimirjButton.setEnabled(true);
        excluirjButton.setEnabled(true);
        duplicarjButton.setEnabled(true);
    }//GEN-LAST:event_orcamentoCursojTableMouseClicked

    private void FecharrjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FecharrjButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_FecharrjButtonActionPerformed

    private void imprimirjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirjButton1ActionPerformed
        new FrmPesquisarProdutos(this, usuarioLogadoBean);
    }//GEN-LAST:event_imprimirjButton1ActionPerformed

    private void imprimirjButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirjButton3ActionPerformed
        int linha = orcamentoCursojTable.getSelectedRow();
        if (linha>=0){
            new FrmEnvioEmail(listaVendas.get(linha).getIdorcamentoCurso(), usuarioLogadoBean);
        }
    }//GEN-LAST:event_imprimirjButton3ActionPerformed

    private void nomeClientejTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomeClientejTextFieldKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            AdicionarjButton3.setEnabled(true);
            carregarModelVendas();
        }
    }//GEN-LAST:event_nomeClientejTextFieldKeyPressed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        int linha = orcamentoCursojTable.getSelectedRow();
        if (linha>=0){
            boolean resultado = JOptionPane.showConfirmDialog(null, "Confirma Cancelamento do Orçamento?", "Excluir", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0;
            if (resultado) {
                CancelarOrcamento(listaVendas.get(linha).getIdorcamentoCurso());
                carregarModelVendas();
            }
        }
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void duplicarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duplicarjButtonActionPerformed
        int linha = orcamentoCursojTable.getSelectedRow();
        if (linha>=0){
            new FrmFichaOrcamentoCurso(listaVendas.get(linha).getIdorcamentoCurso(), usuarioLogadoBean, this, listaCambio.get(0).getData(), true);
        }
    }//GEN-LAST:event_duplicarjButtonActionPerformed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdicionarjButton3;
    private javax.swing.JToolBar BarradeTarefasjToolBar3;
    private javax.swing.JButton EditarjButton;
    private javax.swing.JButton FecharrjButton;
    private javax.swing.JToolBar.Separator SeparadordeTarefasjSeparator;
    private javax.swing.JButton duplicarjButton;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JButton imprimirjButton;
    private javax.swing.JButton imprimirjButton1;
    private javax.swing.JButton imprimirjButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomeClientejTextField;
    private javax.swing.JTable orcamentoCursojTable;
    // End of variables declaration//GEN-END:variables
    public void carregarModelVendas(){
        String sql = null;
        if (usuarioLogadoBean.getUsuario().getTipo().equalsIgnoreCase("Gerencial")){
            sql = "Select v from Vieworcamentocurso v where v.nomeCliente like '%" + nomeClientejTextField.getText() + "%' and v.situacao='Processo' order by v.data";
        }else {
            sql = "Select v from Vieworcamentocurso v where v.idunidadenegocio=" + usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio() +  
                     " and v.nomeCliente like '%" + nomeClientejTextField.getText() + "%' and v.situacao='Processo' order by v.data";
        }
        OrcamentoCursoController orcamentoCursoController = new OrcamentoCursoController();
        listaVendas = orcamentoCursoController.listarOrcamentoCurso(sql);
        if (listaVendas==null){
            listaVendas = new ArrayList<Vieworcamentocurso>();
        }
        modelVendas = new ConsultaVendasTableModel(listaVendas);
        orcamentoCursojTable.setModel(modelVendas);
        orcamentoCursojTable.getColumnModel().getColumn(0).setPreferredWidth(200);
        orcamentoCursojTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        orcamentoCursojTable.getColumnModel().getColumn(2).setPreferredWidth(200);
        orcamentoCursojTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        orcamentoCursojTable.getColumnModel().getColumn(4).setPreferredWidth(200);
        orcamentoCursojTable.getColumnModel().getColumn(5).setPreferredWidth(100);
        orcamentoCursojTable.repaint();
    }

    @Override
    public void setModel() {
        carregarModelVendas();
        AdicionarjButton3.setEnabled(false);
    }

    @Override
    public void setImpressao(boolean ficha, boolean contrato, boolean recibo) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public void imprimirFichaOrcamentoCurso(){
            String url = ("telas/OrcamentoCurso/Relatorios/FichaOrcamentoCursoPagina01.jasper");
            Map parameters = new HashMap();
            try {
                parameters.put("idOrcamentoCurso", listaVendas.get(linha).getIdorcamentoCurso());
                parameters.put("SUBREPORT_DIR","telas/OrcamentoCurso/Relatorios/");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Não foi possível gerar o relatório " + ex);
                ex.printStackTrace();
            }
            new relatoriosJasper(url, parameters);
    }

    @Override
    public void setPesquisa(Cliente cliente, Unidadenegocio unidade, Usuario usuario, Date dataInicial, Date dataFinal) {
        String sql = null;
        sql = "Select v from Vieworcamentocurso v where ";
        boolean primeira = true;
        if (dataInicial!=null){
            sql = sql  + " v.dataVenda>='" + Formatacao.ConvercaoDataSql(dataInicial) + 
                    "' and v.dataVenda<='" + Formatacao.ConvercaoDataSql(dataFinal) + "' ";
            primeira = false;
        }
        if (cliente!=null){
            if (primeira){
                primeira = false;
                sql = sql + " v.idcliente=" + cliente.getIdcliente() + " ";
            }else {
                sql = sql + " and v.idcliente=" + cliente.getIdcliente() + " ";
            }
        }        
        if (unidade!=null){
            if (primeira){
                primeira = false;
                sql = sql + " v.idunidadeNegocio=" + unidade.getIdunidadeNegocio() + " ";
            }else {
                sql = sql + " and v.idunidadeNegocio=" + unidade.getIdunidadeNegocio() + " ";
            }
        }
        if (usuario!=null){
            if (primeira){
                primeira = false;
                sql = sql + " v.idusuario=" + usuario.getIdusuario();
            }else {
                sql = sql + " and v.idusuario=" + usuario.getIdusuario();
            }
            
        }
        if (usuarioLogadoBean.getUsuario().getTipo().equalsIgnoreCase("Gerencial")){
            sql = sql + " order by v.dataVenda";
        }else {
            sql = sql + " and v.idunidadeNegocio=" + usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio() +  " order by v.dataVenda";
        }
        OrcamentoCursoController orcamentoCursoController = new OrcamentoCursoController();
        listaVendas = orcamentoCursoController.listarOrcamentoCurso(sql);
        if (listaVendas==null){
            listaVendas = new ArrayList<Vieworcamentocurso>();
        }
        modelVendas = new ConsultaVendasTableModel(listaVendas);
        orcamentoCursojTable.setModel(modelVendas);
        orcamentoCursojTable.getColumnModel().getColumn(0).setPreferredWidth(200);
        orcamentoCursojTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        orcamentoCursojTable.getColumnModel().getColumn(2).setPreferredWidth(200);
        orcamentoCursojTable.getColumnModel().getColumn(3).setPreferredWidth(200);
        orcamentoCursojTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        orcamentoCursojTable.repaint();
    }
    
    public void CancelarOrcamento(int idOrcamento) {
        OrcamentoCursoController orcamentoCursoController = new OrcamentoCursoController();
        Orcamentocurso orcamentocurso = orcamentoCursoController.consultar(idOrcamento);
        if (orcamentocurso != null) {
            orcamentocurso.setSituacao("Cancelado");
            orcamentoCursoController.salvar(orcamentocurso);
            JOptionPane.showMessageDialog(rootPane, "Orçamento Cancelado");
        }
    }
}
