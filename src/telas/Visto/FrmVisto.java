/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.Visto;

import com.toedter.calendar.JTextFieldDateEditor;
import controller.CambioController;
import controller.ClienteController;
import controller.ContasReceberController;
import controller.FollowupController;
import controller.FormaPagamentoController;
import controller.OrcamentoController;
import controller.ParametrosProdutosController;
import controller.ParcelamentoPagamentoController;
import controller.ProdutoOrcamentoController;
import controller.VendasComissaoController;
import controller.VendasController;
import controller.VistosController;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.Cambio;
import model.Cliente;
import model.Contasreceber;
import model.Controlevistos;
import model.Formapagamento;
import model.Orcamento;
import model.Orcamentoprodutosorcamento;
import model.Parametrosprodutos;
import model.Parcelamentopagamento;
import model.Produtosorcamento;
import model.Valoresvistos;
import model.Vendas;
import model.Vendascomissao;
import model.Vistos;
import telas.Cliente.FrmConsultaCliente;
import telas.Comissao.ComissaoCursos;
import telas.Comissao.ComissaoVisto;
import telas.Cursos.ConsultaParcelamentoPagamentoTableModel;
import telas.Usuarios.UsuarioLogadoBean;
import telas.Visto.Valores.FrmConsultaValoresVistos;
import util.ContasReceberBean;
import util.EnviarEmailBean;
import util.Formatacao;
import util.FrmCalculoJuros;
import util.LimiteTextoJedit;
import util.relatoriosJasper;

/**
 *
 * @author Wolverine
 */
public class FrmVisto extends javax.swing.JFrame implements IVistos{
    
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private Cliente cliente;
    private Vistos vistos;
    private Vistos vistosAlterado;
    private UsuarioLogadoBean usuarioLogadoBean;
    private Vendas vendas;
     private Vendas vendaAlterada;
    private Parametrosprodutos parametrosprodutos;
    private float valorTotal;
    private boolean consultaCambio=false;
    private Cambio cambio;
    private float valorCambio=0;
    private String cambioAlterado;
    private List<ProdutoOrcamentoBean> listaProdutoOrcamentoBean;
    private List<ProdutoOrcamentoBean> listaProdutoOrcamentoApagarBean;
    private Orcamento orcamento;
    private float valorJuros=0;
    private float totalPagar=0;
    private float valorEntrada=0;
    private float valorParcelar=0;
    private float valorParcela=0;
    private float totalMoedaEstrangeira=0;
    private float totalMoedaReal = 0;
    private Formapagamento formaPagamento;
    private IVistoConsulta telaConsulta;
    private int idVenda = 0;
    private ConsultaParcelamentoPagamentoTableModel modelParcelamento;
    private List<Parcelamentopagamento> listaParcelamento;
    private boolean novaFicha=false;
    private Valoresvistos valoresVistos;
    private String situacao="PROCESSO";
    private String dadosAlterado;
    private float valorVendaAlterar=0.0f;
    /**
     * Creates new form FrmPacotes
     */
    public FrmVisto(int idVendas, UsuarioLogadoBean usuarioLogadoBean, IVistoConsulta telaConsulta) {
        this.usuarioLogadoBean =usuarioLogadoBean;
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/##";
        placeHolder = '_';
        this.telaConsulta = telaConsulta;
        this.idVenda = idVendas;
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo/logotela.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        limitarJText();
        carregarInicializacao(idVendas);
        consultarParametrosProdutos();
        carregarModelParcelamento();       
        this.setVisible(true);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passagemAereabuttonGroup = new javax.swing.ButtonGroup();
        HotelbuttonGroup = new javax.swing.ButtonGroup();
        carrobuttonGroup = new javax.swing.ButtonGroup();
        OutrosbuttonGroup = new javax.swing.ButtonGroup();
        SegurobuttonGroup = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        clientejTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        paisDestinojTextField = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        duracaojTextField = new javax.swing.JTextField();
        dataIniciojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    jLabel39 = new javax.swing.JLabel();
    valorVistojTextField = new javax.swing.JTextField();
    jLabel65 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    observacaojTextField = new javax.swing.JTextField();
    dataEntregaDocumentosjDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
        maskPattern, placeHolder));
jLabel6 = new javax.swing.JLabel();
tipoVistojTextField = new javax.swing.JTextField();
jButton2 = new javax.swing.JButton();
jPanel5 = new javax.swing.JPanel();
jPanel19 = new javax.swing.JPanel();
condicaoPagamentojComboBox = new javax.swing.JComboBox();
jLabel53 = new javax.swing.JLabel();
valorOrcamentoFormajTextField = new javax.swing.JTextField();
jLabel54 = new javax.swing.JLabel();
possuiJurosjComboBox = new javax.swing.JComboBox();
jLabel64 = new javax.swing.JLabel();
valorJurosjTextField = new javax.swing.JTextField();
jLabel56 = new javax.swing.JLabel();
totalPagarjTextField = new javax.swing.JTextField();
jLabel68 = new javax.swing.JLabel();
jLabel29 = new javax.swing.JLabel();
saldoReceberjTextField = new javax.swing.JTextField();
jLabel30 = new javax.swing.JLabel();
saldoParcelarjTextField = new javax.swing.JTextField();
buscaBancojButton4 = new javax.swing.JButton();
matrizjCheckBox = new javax.swing.JCheckBox();
jPanel16 = new javax.swing.JPanel();
jLabel61 = new javax.swing.JLabel();
tipoParcelamentojComboBox = new javax.swing.JComboBox();
jLabel62 = new javax.swing.JLabel();
meioPagamentojComboBox = new javax.swing.JComboBox();
jLabel63 = new javax.swing.JLabel();
valorParcelamentojTextField = new javax.swing.JTextField();
jLabel58 = new javax.swing.JLabel();
jLabel59 = new javax.swing.JLabel();
numeroParcelasjComboBox = new javax.swing.JComboBox();
valorParcelajTextField = new javax.swing.JTextField();
jLabel60 = new javax.swing.JLabel();
dataVencimentojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
    maskPattern, placeHolder));
    jPanel20 = new javax.swing.JPanel();
    jButton7 = new javax.swing.JButton();
    jButton8 = new javax.swing.JButton();
    jScrollPane2 = new javax.swing.JScrollPane();
    parcelamentojTable = new javax.swing.JTable();
    jPanel2 = new javax.swing.JPanel();
    jScrollPane3 = new javax.swing.JScrollPane();
    observacoesjTextArea = new javax.swing.JTextArea();
    jPanel21 = new javax.swing.JPanel();
    jScrollPane4 = new javax.swing.JScrollPane();
    obsTMjTextArea = new javax.swing.JTextArea();
    jLabel32 = new javax.swing.JLabel();
    jPanel18 = new javax.swing.JPanel();
    jButton5 = new javax.swing.JButton();
    jButton6 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Vistos");

    jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
        public void stateChanged(javax.swing.event.ChangeEvent evt) {
            jTabbedPane1StateChanged(evt);
        }
    });

    jLabel1.setText("Pesquisar Cliente");

    clientejTextField.setEditable(false);

    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/selecionar.png"))); // NOI18N
    jButton1.setText("Selecionar");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jLabel36.setText("Pa√≠s de Destino");

    paisDestinojTextField.setEditable(false);

    jLabel38.setText("Tipo de Visto");

    duracaojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    duracaojTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            duracaojTextFieldFocusLost(evt);
        }
        public void focusGained(java.awt.event.FocusEvent evt) {
            duracaojTextFieldFocusGained(evt);
        }
    });
    duracaojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            duracaojTextFieldKeyTyped(evt);
        }
    });

    dataIniciojDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataIniciojDateChooserFocusGained(evt);
        }
    });

    jLabel39.setText("Dura√ß√£o");

    valorVistojTextField.setEditable(false);
    valorVistojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorVistojTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            valorVistojTextFieldFocusLost(evt);
        }
    });
    valorVistojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            valorVistojTextFieldKeyTyped(evt);
        }
    });

    jLabel65.setText("Valor do Visto");

    jLabel2.setText("In√≠cio da viagem");

    jLabel3.setText("Observa√ß√£o");

    dataEntregaDocumentosjDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataEntregaDocumentosjDateChooserFocusGained(evt);
        }
    });

    jLabel6.setText("Data entrega documentos");

    tipoVistojTextField.setEditable(false);

    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/selecionar.png"))); // NOI18N
    jButton2.setText("Selecionar");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(clientejTextField)
                    .addGap(18, 18, 18)
                    .addComponent(jButton1))
                .addComponent(tipoVistojTextField)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(dataIniciojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel39)
                                .addComponent(duracaojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel36)
                        .addComponent(paisDestinojTextField))
                    .addGap(32, 32, 32)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel65)
                        .addComponent(dataEntregaDocumentosjDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(valorVistojTextField))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                    .addComponent(jButton2))
                .addComponent(observacaojTextField)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel38)
                        .addComponent(jLabel3))
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(clientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton1))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel6))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dataIniciojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(dataEntregaDocumentosjDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel36)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(paisDestinojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel65)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(valorVistojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2)))))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel39)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(duracaojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel38)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tipoVistojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(observacaojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(174, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab("Vistos", jPanel1);

    jPanel19.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    condicaoPagamentojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "√Ä Vista", "Parcelado" }));
    condicaoPagamentojComboBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            condicaoPagamentojComboBoxItemStateChanged(evt);
        }
    });

    jLabel53.setText("Forma de Pagamento");

    valorOrcamentoFormajTextField.setEditable(false);
    valorOrcamentoFormajTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorOrcamentoFormajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            valorOrcamentoFormajTextFieldKeyTyped(evt);
        }
    });

    jLabel54.setText("Valor Or√ßamento");

    possuiJurosjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N√£o", "Sim" }));
    possuiJurosjComboBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            possuiJurosjComboBoxItemStateChanged(evt);
        }
    });

    jLabel64.setText("Acrescentar Juros");

    valorJurosjTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorJurosjTextField.setEnabled(false);
    valorJurosjTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            valorJurosjTextFieldFocusLost(evt);
        }
    });
    valorJurosjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            valorJurosjTextFieldKeyReleased(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            valorJurosjTextFieldKeyTyped(evt);
        }
    });

    jLabel56.setText("Valor Juros");

    totalPagarjTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    totalPagarjTextField.setEnabled(false);

    jLabel68.setText("Total a Pagar");

    jLabel29.setText("Saldo a Receber");

    saldoReceberjTextField.setEditable(false);
    saldoReceberjTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    saldoReceberjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            saldoReceberjTextFieldKeyTyped(evt);
        }
    });

    jLabel30.setText("Saldo a Parcelar");

    saldoParcelarjTextField.setEditable(false);
    saldoParcelarjTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    saldoParcelarjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            saldoParcelarjTextFieldKeyTyped(evt);
        }
    });

    buscaBancojButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icones/cambio.png"))); // NOI18N
    buscaBancojButton4.setToolTipText("Calculo de Juros");
    buscaBancojButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            buscaBancojButton4ActionPerformed(evt);
        }
    });

    matrizjCheckBox.setSelected(true);
    matrizjCheckBox.setText("Venda pela Matriz");

    javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
    jPanel19.setLayout(jPanel19Layout);
    jPanel19Layout.setHorizontalGroup(
        jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel19Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel19Layout.createSequentialGroup()
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(condicaoPagamentojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel53))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(valorOrcamentoFormajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel54)))
                .addComponent(matrizjCheckBox))
            .addGap(18, 18, 18)
            .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel19Layout.createSequentialGroup()
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(possuiJurosjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel64))
                    .addGap(28, 28, 28)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel19Layout.createSequentialGroup()
                            .addComponent(valorJurosjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(buscaBancojButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel56))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel68)
                        .addComponent(totalPagarjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel19Layout.createSequentialGroup()
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel29)
                        .addComponent(saldoReceberjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(saldoParcelarjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel30))))
            .addContainerGap())
    );
    jPanel19Layout.setVerticalGroup(
        jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel19Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel53)
                .addComponent(jLabel54)
                .addComponent(jLabel56)
                .addComponent(jLabel64)
                .addComponent(jLabel68))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(condicaoPagamentojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valorOrcamentoFormajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(possuiJurosjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valorJurosjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalPagarjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(buscaBancojButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel19Layout.createSequentialGroup()
                    .addComponent(jLabel30)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(saldoParcelarjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel19Layout.createSequentialGroup()
                    .addComponent(jLabel29)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(saldoReceberjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(matrizjCheckBox))))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel61.setText("Tipo de Parcelamento");

    tipoParcelamentojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Matriz", "Loja", "Fornecedor" }));

    jLabel62.setText("Forma de Pagamento");

    meioPagamentojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Dinheiro", "Boleto", "Cart√£o de cr√©dito", "Cart√£o de cr√©dito autorizado", "Cart√£o d√©bito", "Cheque", "D√©posito", "Financiamento banco" }));
    meioPagamentojComboBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            meioPagamentojComboBoxItemStateChanged(evt);
        }
    });

    jLabel63.setText("Data Primeiro Vencimento");

    valorParcelamentojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorParcelamentojTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            valorParcelamentojTextFieldFocusLost(evt);
        }
        public void focusGained(java.awt.event.FocusEvent evt) {
            valorParcelamentojTextFieldFocusGained(evt);
        }
    });
    valorParcelamentojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            valorParcelamentojTextFieldKeyTyped(evt);
        }
    });

    jLabel58.setText("Valor a Parcelar ");

    jLabel59.setText("N¬∫ Parcelas");

    numeroParcelasjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));
    numeroParcelasjComboBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            numeroParcelasjComboBoxItemStateChanged(evt);
        }
    });

    valorParcelajTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    valorParcelajTextField.setEnabled(false);
    valorParcelajTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            valorParcelajTextFieldFocusGained(evt);
        }
    });
    valorParcelajTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            valorParcelajTextFieldKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            valorParcelajTextFieldKeyTyped(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            valorParcelajTextFieldKeyReleased(evt);
        }
    });

    jLabel60.setText("Valor Parcela");

    dataVencimentojDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataVencimentojDateChooserFocusGained(evt);
        }
    });

    javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
    jPanel16.setLayout(jPanel16Layout);
    jPanel16Layout.setHorizontalGroup(
        jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel16Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel16Layout.createSequentialGroup()
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel62)
                        .addComponent(meioPagamentojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(52, 52, 52)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tipoParcelamentojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel61))
                    .addGap(63, 63, 63)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dataVencimentojDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel16Layout.createSequentialGroup()
                            .addComponent(jLabel63, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18))))
                .addGroup(jPanel16Layout.createSequentialGroup()
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel58)
                        .addComponent(valorParcelamentojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(109, 109, 109)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel59)
                        .addComponent(numeroParcelasjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(valorParcelajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap())
    );
    jPanel16Layout.setVerticalGroup(
        jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel16Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel16Layout.createSequentialGroup()
                    .addComponent(jLabel62)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(meioPagamentojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel16Layout.createSequentialGroup()
                            .addComponent(tipoParcelamentojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                        .addGroup(jPanel16Layout.createSequentialGroup()
                            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel63)
                                .addComponent(jLabel61))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dataVencimentojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(11, 11, 11)))))
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel16Layout.createSequentialGroup()
                    .addComponent(jLabel59)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(numeroParcelasjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel16Layout.createSequentialGroup()
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel58)
                        .addComponent(jLabel60))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(valorParcelajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(valorParcelamentojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap())
    );

    jPanel20.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/adicionar.png"))); // NOI18N
    jButton7.setText("Adicionar");
    jButton7.setToolTipText("Adicionar forma de pagamento");
    jButton7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton7ActionPerformed(evt);
        }
    });

    jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/excluir.png"))); // NOI18N
    jButton8.setText("Excluir");
    jButton8.setToolTipText("Excluir forma de pagamento");
    jButton8.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton8ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
    jPanel20.setLayout(jPanel20Layout);
    jPanel20Layout.setHorizontalGroup(
        jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );
    jPanel20Layout.setVerticalGroup(
        jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton7)
                .addComponent(jButton8))
            .addContainerGap())
    );

    parcelamentojTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Forma Pagamento", "Tipo Parcelmaneto", "Valor a Parcelar", "N¬∫ Parcelas", "Valor Parcela"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jScrollPane2.setViewportView(parcelamentojTable);

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
            .addContainerGap())
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(156, 156, 156))
    );
    jPanel5Layout.setVerticalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    jTabbedPane1.addTab("Forma de Pagto", jPanel5);

    observacoesjTextArea.setColumns(20);
    observacoesjTextArea.setRows(5);
    jScrollPane3.setViewportView(observacoesjTextArea);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
            .addContainerGap())
    );

    jTabbedPane1.addTab("Obs", jPanel2);

    obsTMjTextArea.setColumns(20);
    obsTMjTextArea.setRows(5);
    jScrollPane4.setViewportView(obsTMjTextArea);

    jLabel32.setText("Observa√ß√µes que ser√£o enviadas ao Departamento Respons√°vel e ao Departamento Financeiro da TravelMate");

    javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
    jPanel21.setLayout(jPanel21Layout);
    jPanel21Layout.setHorizontalGroup(
        jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel21Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4)
                .addGroup(jPanel21Layout.createSequentialGroup()
                    .addComponent(jLabel32)
                    .addGap(0, 96, Short.MAX_VALUE)))
            .addContainerGap())
    );
    jPanel21Layout.setVerticalGroup(
        jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel32)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    jTabbedPane1.addTab("Obs TM", jPanel21);

    jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/confirmar.png"))); // NOI18N
    jButton5.setText("Confirmar");
    jButton5.setToolTipText("Confirma Emiss√£o de Visto");
    jButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton5ActionPerformed(evt);
        }
    });

    jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/cancel.png"))); // NOI18N
    jButton6.setText("Cancelar");
    jButton6.setToolTipText("Cancela Emiss√£o de Pacote Tur√≠stico");
    jButton6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton6ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
    jPanel18.setLayout(jPanel18Layout);
    jPanel18Layout.setHorizontalGroup(
        jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel18Layout.createSequentialGroup()
            .addContainerGap(73, Short.MAX_VALUE)
            .addComponent(jButton5)
            .addGap(49, 49, 49)
            .addComponent(jButton6)
            .addGap(86, 86, 86))
    );
    jPanel18Layout.setVerticalGroup(
        jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel18Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton5)
                .addComponent(jButton6))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(132, 132, 132))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dataIniciojDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataIniciojDateChooserFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_dataIniciojDateChooserFocusGained

    private void duracaojTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_duracaojTextFieldFocusGained
        
    }//GEN-LAST:event_duracaojTextFieldFocusGained

    private void duracaojTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_duracaojTextFieldFocusLost
        
    }//GEN-LAST:event_duracaojTextFieldFocusLost

    private void duracaojTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_duracaojTextFieldKeyTyped
        
    }//GEN-LAST:event_duracaojTextFieldKeyTyped

    private void valorVistojTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorVistojTextFieldFocusLost

    }//GEN-LAST:event_valorVistojTextFieldFocusLost

    private void valorVistojTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorVistojTextFieldKeyTyped
        if (evt.getKeyChar()=='.'){
            evt.setKeyChar(',');
        }
        String caracteres = "0987654321,";
        if (evt.getKeyChar() != '\b') {
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_valorVistojTextFieldKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new FrmConsultaCliente(usuarioLogadoBean, this);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String msg = validarDados();
        String nsituacao;
        if (msg.length() < 5) {
            boolean resultado = false;
            if (situacao.equalsIgnoreCase("PROCESSO")) {
                resultado = JOptionPane.showConfirmDialog(null, "FINALIZAR FICHA? Ficha ser√° enviada para Ger√™ncia", "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0;
                if (resultado){
                    novaFicha=true;
                }
            }else {
                resultado = true;
            }
            if (resultado) {
                nsituacao="FINALIZADA";
            } else {
                nsituacao="PROCESSO";
            }
            valorTotal = Formatacao.formatarStringfloat(valorVistojTextField.getText());
            ProdutoOrcamentoController produtoOrcamentoController = new ProdutoOrcamentoController();
            Produtosorcamento produtosorcamento = produtoOrcamentoController.consultar(parametrosprodutos.getVistoOrcamento());
            if (produtosorcamento!=null){
                ProdutoOrcamentoBean pob = new ProdutoOrcamentoBean();
                pob.setIdOrcamentoProdutoOrcamento(0);
                pob.setDescricaoProdutoOrcamento(produtosorcamento.getDescricao());
                pob.setIdProdutoOrcamento(produtosorcamento.getIdprodutosOrcamento());
                pob.setValorMoedaEstrangeira(0.0f);
                pob.setValorMoedaReal(valorTotal);
                pob.setApagar(false);
                pob.setVisto(false);
                pob.setSeguro(true);
                pob.setNovo(true);
                if (listaProdutoOrcamentoBean==null){
                    listaProdutoOrcamentoApagarBean = new ArrayList<ProdutoOrcamentoBean>();
                }
                listaProdutoOrcamentoBean.add(pob);
                
            }
            SalvarVerndas(nsituacao);
            salvarVisto();
            salvarOrcamento();
            salvarFormaPagamento();
            salvarFollowup();
            if (novaFicha){
                if(nsituacao.equalsIgnoreCase("FINALIZADA")){
                    calcularComissao();
                    ContasReceberBean contasReceberBean = new ContasReceberBean(vendas, listaParcelamento, usuarioLogadoBean);
                }
            }else {
                if (nsituacao.equalsIgnoreCase("FINALIZADA")) {
                    float valorVendaatual = vendas.getValor();
                    if (valorVendaAlterar != valorVendaatual) {
                        calcularComissao();
                    }
                }
            }
            
            salvarControle();
            if (this.vistos.getIdvistos()!= null) {
                if (vendaAlterada != null) {
                    verificarDadosAlterado();
                }
            }
            emitirEmailGerencial();
            JOptionPane.showMessageDialog(rootPane, "Emiss√£o de Visto Salva com Sucesso");
            telaConsulta.setModel();
            imprimirRecibo();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(rootPane, msg);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if (jTabbedPane1.getSelectedIndex()==1){
            calcularValorTotalOrcamento();
        }
        
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void dataEntregaDocumentosjDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataEntregaDocumentosjDateChooserFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_dataEntregaDocumentosjDateChooserFocusGained

    private void condicaoPagamentojComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_condicaoPagamentojComboBoxItemStateChanged

    }//GEN-LAST:event_condicaoPagamentojComboBoxItemStateChanged

    private void valorOrcamentoFormajTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorOrcamentoFormajTextFieldKeyTyped
        if (evt.getKeyChar()=='.'){
            evt.setKeyChar(',');
        }
        String caracteres = "0987654321,-";
        if (evt.getKeyChar() != '\b') {
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_valorOrcamentoFormajTextFieldKeyTyped

    private void possuiJurosjComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_possuiJurosjComboBoxItemStateChanged
        if (possuiJurosjComboBox.getSelectedItem().toString().equalsIgnoreCase("Sim")){
            valorJurosjTextField.setEnabled(true);
            valorJurosjTextField.setText("");
            valorJurosjTextField.selectAll();
        }else {
            valorJurosjTextField.setText("");
            valorJurosjTextField.setEnabled(false);
            totalPagar = valorTotal;
            totalPagarjTextField.setText(Formatacao.formatarFloatString(totalPagar));
        }
    }//GEN-LAST:event_possuiJurosjComboBoxItemStateChanged

    private void valorJurosjTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorJurosjTextFieldFocusLost
        if (possuiJurosjComboBox.getSelectedItem().toString().equalsIgnoreCase("sim")){
            if (valorJurosjTextField.getText().length()>0){
                valorJuros = Formatacao.formatarStringfloat(valorJurosjTextField.getText());
                totalPagar = valorTotal + valorJuros;
                totalPagarjTextField.setText(Formatacao.formatarFloatString(totalPagar));
                saldoReceberjTextField.setText(Formatacao.formatarFloatString(totalPagar));
                saldoParcelarjTextField.setText(Formatacao.formatarFloatString(totalPagar));
            }
        }
        if (valorJurosjTextField.getText().length()>0){
            float valor = Formatacao.formatarStringfloat(valorJurosjTextField.getText());
            valorJurosjTextField.setText(Formatacao.formatarFloatString(valor));
        }
    }//GEN-LAST:event_valorJurosjTextFieldFocusLost

    private void valorJurosjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorJurosjTextFieldKeyTyped
        if (evt.getKeyChar()=='.'){
            evt.setKeyChar(',');
        }
        String caracteres = "0987654321,";
        if (evt.getKeyChar() != '\b') {
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_valorJurosjTextFieldKeyTyped

    private void valorJurosjTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorJurosjTextFieldKeyReleased

    }//GEN-LAST:event_valorJurosjTextFieldKeyReleased

    private void saldoReceberjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saldoReceberjTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_saldoReceberjTextFieldKeyTyped

    private void saldoParcelarjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saldoParcelarjTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_saldoParcelarjTextFieldKeyTyped

    private void meioPagamentojComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_meioPagamentojComboBoxItemStateChanged
    }//GEN-LAST:event_meioPagamentojComboBoxItemStateChanged

    private void valorParcelamentojTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorParcelamentojTextFieldFocusLost
        if (valorParcelamentojTextField.getText().length()>0){
            float valor = Formatacao.formatarStringfloat(valorParcelamentojTextField.getText());
            valorParcelamentojTextField.setText(Formatacao.formatarFloatString(valor));
            int numero = Integer.parseInt(numeroParcelasjComboBox.getSelectedItem().toString());
            float vParcela = valor / numero;
            valorParcelajTextField.setText(Formatacao.formatarFloatString(vParcela));
        }
    }//GEN-LAST:event_valorParcelamentojTextFieldFocusLost

    private void valorParcelamentojTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorParcelamentojTextFieldFocusGained

    }//GEN-LAST:event_valorParcelamentojTextFieldFocusGained

    private void valorParcelamentojTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorParcelamentojTextFieldKeyTyped
        if (evt.getKeyChar()=='.'){
            evt.setKeyChar(',');
        }
        String caracteres = "0987654321,-";
        if (evt.getKeyChar() != '\b') {
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_valorParcelamentojTextFieldKeyTyped

    private void valorParcelajTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorParcelajTextFieldFocusGained
        float saldoParcelas =0.0f;
        int numeroParcelas =0;
        float valorParcela = 0.0f;
        numeroParcelas = Integer.parseInt(numeroParcelasjComboBox.getSelectedItem().toString());
        if (valorParcelamentojTextField.getText().length()>0){
            saldoParcelas = Formatacao.formatarStringfloat(valorParcelamentojTextField.getText());
        }
        if ((saldoParcelas>0) && (numeroParcelas>0)){
            valorParcela = saldoParcelas / numeroParcelas;
            valorParcelajTextField.setText(Formatacao.formatarFloatString(valorParcela));
            this.valorParcela = valorParcela;
        }
    }//GEN-LAST:event_valorParcelajTextFieldFocusGained

    private void valorParcelajTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorParcelajTextFieldKeyPressed
        if (evt.getKeyChar()=='.'){
            evt.setKeyChar(',');
        }
    }//GEN-LAST:event_valorParcelajTextFieldKeyPressed

    private void valorParcelajTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorParcelajTextFieldKeyTyped
        if (evt.getKeyChar()=='.'){
            evt.setKeyChar(',');
        }
        String caracteres = "0987654321,-";
        if (evt.getKeyChar() != '\b') {
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_valorParcelajTextFieldKeyTyped

    private void valorParcelajTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorParcelajTextFieldKeyReleased

    }//GEN-LAST:event_valorParcelajTextFieldKeyReleased

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String msg = validarFormaPagamento();
        if (msg.length() < 5) {
            float saldoParcelar = Formatacao.formatarStringfloat(saldoParcelarjTextField.getText());
            float valorParcela = Formatacao.formatarStringfloat(valorParcelamentojTextField.getText());
            if (valorParcela > saldoParcelar) {
                JOptionPane.showMessageDialog(rootPane, "Valor a Parcelar maior que saldo a parcelar");
                valorParcelajTextField.selectAll();
                valorParcelajTextField.requestFocus();
            } else {
                Parcelamentopagamento parcelamento = new Parcelamentopagamento();
                parcelamento.setDiaVencimento(dataVencimentojDateChooser.getDate());
                parcelamento.setFormaPagamento(meioPagamentojComboBox.getSelectedItem().toString());
                int numeroParcelas = Integer.parseInt(numeroParcelasjComboBox.getSelectedItem().toString());
                parcelamento.setNumeroParcelas(numeroParcelas);
                parcelamento.setTipoParcelmaneto(tipoParcelamentojComboBox.getSelectedItem().toString());
                parcelamento.setValorParcela(Formatacao.formatarStringfloat(valorParcelajTextField.getText()));
                parcelamento.setValorParcelamento(Formatacao.formatarStringfloat(valorParcelamentojTextField.getText()));
                if (listaParcelamento == null) {
                    listaParcelamento = new ArrayList<Parcelamentopagamento>();
                }
                listaParcelamento.add(parcelamento);
                carregarModelParcelamento();
                calcularParcelamentoPagamento();
                valorParcelajTextField.setText("");
                valorParcelamentojTextField.setText("");
                numeroParcelasjComboBox.setSelectedItem("01");
                dataVencimentojDateChooser.setDate(new Date());
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, msg);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int linha = parcelamentojTable.getSelectedRow();
        if (linha>=0){
            if (listaParcelamento.get(linha).getIdparcemlamentoPagamento()!=null){
                ParcelamentoPagamentoController parcelamentoPagamentoController = new ParcelamentoPagamentoController();
                parcelamentoPagamentoController.excluir(listaParcelamento.get(linha).getIdparcemlamentoPagamento());
            }else {
                listaParcelamento.remove(linha);
            }
            carregarModelParcelamento();
            calcularParcelamentoPagamento();
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void numeroParcelasjComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_numeroParcelasjComboBoxItemStateChanged
        if (valorParcelamentojTextField.getText().length()>0){
            float valor = Formatacao.formatarStringfloat(valorParcelamentojTextField.getText());
            valorParcelamentojTextField.setText(Formatacao.formatarFloatString(valor));
            int numero = Integer.parseInt(numeroParcelasjComboBox.getSelectedItem().toString());
            float vParcela = valor / numero;
            valorParcelajTextField.setText(Formatacao.formatarFloatString(vParcela));
        }        // TODO add your handling code here:
    }//GEN-LAST:event_numeroParcelasjComboBoxItemStateChanged

    private void buscaBancojButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaBancojButton4ActionPerformed
        new FrmCalculoJuros(this, valorTotal);
    }//GEN-LAST:event_buscaBancojButton4ActionPerformed

    private void dataVencimentojDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataVencimentojDateChooserFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_dataVencimentojDateChooserFocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new FrmConsultaValoresVistos(usuarioLogadoBean, this);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup HotelbuttonGroup;
    private javax.swing.ButtonGroup OutrosbuttonGroup;
    private javax.swing.ButtonGroup SegurobuttonGroup;
    private javax.swing.JButton buscaBancojButton4;
    private javax.swing.ButtonGroup carrobuttonGroup;
    private javax.swing.JTextField clientejTextField;
    private javax.swing.JComboBox condicaoPagamentojComboBox;
    private com.toedter.calendar.JDateChooser dataEntregaDocumentosjDateChooser;
    private com.toedter.calendar.JDateChooser dataIniciojDateChooser;
    private com.toedter.calendar.JDateChooser dataVencimentojDateChooser;
    private javax.swing.JTextField duracaojTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JCheckBox matrizjCheckBox;
    private javax.swing.JComboBox meioPagamentojComboBox;
    private javax.swing.JComboBox numeroParcelasjComboBox;
    private javax.swing.JTextArea obsTMjTextArea;
    private javax.swing.JTextField observacaojTextField;
    private javax.swing.JTextArea observacoesjTextArea;
    private javax.swing.JTextField paisDestinojTextField;
    private javax.swing.JTable parcelamentojTable;
    private javax.swing.ButtonGroup passagemAereabuttonGroup;
    private javax.swing.JComboBox possuiJurosjComboBox;
    private javax.swing.JTextField saldoParcelarjTextField;
    private javax.swing.JTextField saldoReceberjTextField;
    private javax.swing.JComboBox tipoParcelamentojComboBox;
    private javax.swing.JTextField tipoVistojTextField;
    private javax.swing.JTextField totalPagarjTextField;
    private javax.swing.JTextField valorJurosjTextField;
    private javax.swing.JTextField valorOrcamentoFormajTextField;
    private javax.swing.JTextField valorParcelajTextField;
    private javax.swing.JTextField valorParcelamentojTextField;
    private javax.swing.JTextField valorVistojTextField;
    // End of variables declaration//GEN-END:variables

    public void carregarInicializacao(int idVenda){
        if (idVenda>0){
            carregarObjetos(idVenda);
        }else{
            valorCambio=1;
            consultaCambio=true;
        }
    }
    
    
    
    public String validarDados(){
        String msg ="";
        if (cliente==null){
            msg = msg + "Cliente n√£o Selecionado\r\n";
        }
        double saldoParcelar = Formatacao.formatarStringfloat(saldoParcelarjTextField.getText());
        if (saldoParcelar>0){
            msg = msg + "Forma de Pagamento possui saldo a parcelar em aberto\r\n";
        }
        return msg;
    }
    
    public void SalvarVerndas(String situacao){
        if (vendas==null){
            vendas = new Vendas();
            vendas.setDataVenda(new Date());
            vendas.setUsuario(usuarioLogadoBean.getUsuario().getIdusuario());
            vendas.setUnidadenegocio(usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio());
            novaFicha = true;
        }else{
            if (vendas.getSituacao().equalsIgnoreCase("PROCESSO")){
                vendas.setDataVenda(new Date());
            }
        }
        vendas.setCliente(cliente.getIdcliente());
        if (vendas.getIdvendas()==null){
            vendas.setDataVenda(new Date());
        }
        vendas.setObstm(obsTMjTextArea.getText());
        if (matrizjCheckBox.isSelected()){
            vendas.setVendasMatriz("S");
        }else vendas.setVendasMatriz("N");
        vendas.setProdutos(parametrosprodutos.getVisto());
        vendas.setUnidadenegocio(usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio());
        vendas.setUsuario(usuarioLogadoBean.getUsuario().getIdusuario());
        vendas.setValor(valorTotal);
        vendas.setFornecedor(valoresVistos.getFornecedorcidade().getFornecedor().getIdfornecedor());
        vendas.setFornecedorcidade(valoresVistos.getFornecedorcidade());
        vendas.setSituacao(situacao);
        VendasController vendasController = new VendasController();
        vendas = vendasController.salvar(vendas);
    }
    
    public void salvarVisto() {
        VistosController vistosController = new VistosController();
        if (vistos == null) {
            vistos = new Vistos();
        }

        vistos.setDataEntregaDocumentos(dataEntregaDocumentosjDateChooser.getDate());
        vistos.setObservacao(observacaojTextField.getText());
        vistos.setValorEmissao(valoresVistos.getValorgross());
        vistos.setValoresvistos(valoresVistos);
        vistos.setPossuiVisto("Sim");
        vistos.setPaisDestino(paisDestinojTextField.getText());
        vistos.setTipoVisto(tipoVistojTextField.getText());
        vistos.setDataInicio(dataIniciojDateChooser.getDate());
        vistos.setDuracao(duracaojTextField.getText());
        vistos.setVendas(vendas.getIdvendas());
        vistos.setValoresvistos(valoresVistos);
        vistos = vistosController.salvar(vistos);
    }

    
    
    public void consultarParametrosProdutos(){
        ParametrosProdutosController parametrosProditosController = new ParametrosProdutosController();
        parametrosprodutos = parametrosProditosController.consultar();
    }
    
    
    
    
    
    
    
    public void salvarOrcamento(){
        if (orcamento==null){
            orcamento = new Orcamento();
        }
        orcamento.setDataCambio(cambio.getData());
        orcamento.setTotalMoedaEstrangeira(totalMoedaEstrangeira);
        orcamento.setTotalMoedaNacional(totalMoedaReal);
        orcamento.setVendas(vendas.getIdvendas());
        orcamento.setCambioAlterado("N√£o");
        orcamento.setCambio(5);
        orcamento.setValorCambio(valorCambio);
        orcamento.setTaxatm(0.0f);
        OrcamentoController orcamentoController = new OrcamentoController();
        orcamento = orcamentoController.salvar(orcamento);
        salvarOrcamentoProdutoOrcamento(orcamento);
    }
    
    public void salvarOrcamentoProdutoOrcamento(Orcamento orcamento) {
        apagarOrcamentoProdutosOrcamento();
        if (listaProdutoOrcamentoBean != null) {
            OrcamentoController orcamentoController = new OrcamentoController();
            for (int i = 0; i < listaProdutoOrcamentoBean.size(); i++) {
                Orcamentoprodutosorcamento produto;
                produto = new Orcamentoprodutosorcamento();
                produto.setOrcamento(orcamento.getIdorcamento());
                produto.setProdutosOrcamento(listaProdutoOrcamentoBean.get(i).getIdProdutoOrcamento());
                produto.setValorMoedaEstrangeira(listaProdutoOrcamentoBean.get(i).getValorMoedaEstrangeira());
                produto.setValorMoedaNacional(listaProdutoOrcamentoBean.get(i).getValorMoedaReal());
                orcamentoController.salvar(produto);
            }
        }
    }
    
    
    public void apagarOrcamentoProdutosOrcamento() {
        OrcamentoController orcamentoController = new OrcamentoController();
        List<Orcamentoprodutosorcamento> listaProdutoOrcamento = orcamentoController.listarOrcamentoProdutoOrcamento(orcamento.getIdorcamento());
        if (listaProdutoOrcamento != null) {
            for (int i = 0; i < listaProdutoOrcamento.size(); i++) {
                orcamentoController.excluirOrcamentoProdutoOrcamento(listaProdutoOrcamento.get(i).getIdorcamentoProdutosOrcamento());
            }
        }
    }
    
    public void salvarFormaPagamento() {
            if (formaPagamento==null){
            formaPagamento = new Formapagamento();
        }
        formaPagamento.setCondicao(condicaoPagamentojComboBox.getSelectedItem().toString());
        formaPagamento.setPossuiJuros(possuiJurosjComboBox.getSelectedItem().toString());
        formaPagamento.setValorJutos(valorJuros);
        formaPagamento.setValorOrcamento(Formatacao.formatarStringfloat(valorOrcamentoFormajTextField.getText()));
        formaPagamento.setValorTotal(formaPagamento.getValorJutos() + formaPagamento.getValorOrcamento());
        formaPagamento.setObservacoes(observacoesjTextArea.getText());
        formaPagamento.setVendas(this.vendas.getIdvendas());
        FormaPagamentoController formaPagamentoController = new FormaPagamentoController();
        formaPagamento = formaPagamentoController.salvar(formaPagamento);
        ParcelamentoPagamentoController parcelamentoPagamentoController = new ParcelamentoPagamentoController();
        for(int i=0;i<listaParcelamento.size();i++){
            Parcelamentopagamento parcelamento = listaParcelamento.get(i);
            parcelamento.setIdformapagamento(formaPagamento.getIdformaPagamento());
            parcelamento = parcelamentoPagamentoController.salvar(parcelamento);
        }
    }
    
    
    public void carregarObjetos(int idVenda){
        //Vendas
        VendasController vendasController = new VendasController();
        this.vendas = vendasController.consultarVendas(idVenda);
        if (this.vendas != null) {
            valorVendaAlterar = vendas.getValor();
            situacao = vendas.getSituacao();
            if (vendas.getSituacao().equalsIgnoreCase("FINALIZADA")){
                vendaAlterada = vendas;
            }
            
            ClienteController clienteController = new ClienteController();
            this.cliente = clienteController.consultar(vendas.getCliente());
            clientejTextField.setText(cliente.getNome());
            
            VistosController vistosController = new VistosController();
            vistos = vistosController.consultarVistos(idVenda);
            if (vistos!=null){
                valoresVistos = vistos.getValoresvistos();
                carregarVistoAlteracao();
                carregarVistos();
            }
            
            FormaPagamentoController formaPagamentoController = new FormaPagamentoController();
            this.formaPagamento = formaPagamentoController.consultar(idVenda);
            if (formaPagamento!=null){
                carregarCamposFormaPagamento();
            }
            
            OrcamentoController orcamentoController = new OrcamentoController();
            orcamento = orcamentoController.consultar(idVenda);
            if (orcamento!=null){
                carregarCambio();
                carregarOrcamento();
                List<Orcamentoprodutosorcamento> listaOrcametoProduto = orcamentoController.listarOrcamentoProdutoOrcamento(orcamento.getIdorcamento());
                if (listaOrcametoProduto!=null){
                    for(int i=0;i<listaOrcametoProduto.size();i++){
                        Produtosorcamento prod = orcamentoController.consultarProdutoOrcamento(listaOrcametoProduto.get(i).getProdutosOrcamento());
                        ProdutoOrcamentoBean pob = new ProdutoOrcamentoBean();
                        pob.setDescricaoProdutoOrcamento(prod.getDescricao());
                        pob.setIdProdutoOrcamento(prod.getIdprodutosOrcamento());
                        pob.setValorMoedaEstrangeira(listaOrcametoProduto.get(i).getValorMoedaEstrangeira());
                        pob.setValorMoedaReal(listaOrcametoProduto.get(i).getValorMoedaNacional());
                        pob.setIdOrcamentoProdutoOrcamento(listaOrcametoProduto.get(i).getIdorcamentoProdutosOrcamento());
                        pob.setApagar(false);
                        pob.setVisto(false);
                        pob.setSeguro(false);
                        pob.setNovo(false);
                        if (listaProdutoOrcamentoBean==null){
                            listaProdutoOrcamentoBean = new ArrayList<ProdutoOrcamentoBean>();
                        }
                        listaProdutoOrcamentoBean.add(pob);
                    }
                }
            }
            consultaCambio=true;
        }
    }
    
    public void carregarCambio(){
        CambioController cambioController = new CambioController();
        cambio = cambioController.consultar(orcamento.getCambio());
    }
    
    
    
    public void carregarVistos(){
        if (vendas.getVendasMatriz().equalsIgnoreCase("S")){
           matrizjCheckBox.setSelected(true);
       }else matrizjCheckBox.setSelected(false);
       obsTMjTextArea.setText(vendas.getObstm());
        valorVistojTextField.setText(Formatacao.formatarFloatString(vistos.getValorEmissao()));
        paisDestinojTextField.setText(valoresVistos.getFornecedorcidade().getCidade().getPais().getNome());
        dataIniciojDateChooser.setDate(vistos.getDataInicio());
        dataEntregaDocumentosjDateChooser.setDate(vistos.getDataEntregaDocumentos());
        duracaojTextField.setText(vistos.getDuracao());
        observacaojTextField.setText(vistos.getObservacao());
        tipoVistojTextField.setText(valoresVistos.getCategoria());
        
    }
    
    
    
    public void carregarOrcamento(){
        valorCambio = orcamento.getValorCambio();
        cambioAlterado = orcamento.getCambioAlterado();
    }
    
    public void carregarCamposFormaPagamento(){
        condicaoPagamentojComboBox.setSelectedItem(formaPagamento.getCondicao());
        possuiJurosjComboBox.setSelectedItem(formaPagamento.getPossuiJuros());
        valorJuros = formaPagamento.getValorJutos();
        valorJurosjTextField.setText(Formatacao.formatarFloatString(formaPagamento.getValorJutos()));
        observacoesjTextArea.setText(formaPagamento.getObservacoes());
        ParcelamentoPagamentoController parcelamentoPagamentoController = new ParcelamentoPagamentoController();
        listaParcelamento = parcelamentoPagamentoController.listar(formaPagamento.getIdformaPagamento());
        calcularParcelamentoPagamento();
        carregarModelParcelamento();
    }
    
    public void calcularValorTotalOrcamento() {
        valorTotal = 0.0f;
        valorTotal = Formatacao.formatarStringfloat(valorVistojTextField.getText());
        valorOrcamentoFormajTextField.setText(Formatacao.formatarFloatString(valorTotal));
        totalPagar = valorTotal + valorJuros;
        totalPagarjTextField.setText(Formatacao.formatarFloatString(totalPagar));
        saldoReceberjTextField.setText(Formatacao.formatarFloatString(totalPagar));
        calcularParcelamentoPagamento();
    }

    @Override
    public void setCliente(Cliente cliente) {
                if (cliente!=null){
            this.cliente = cliente;
            clientejTextField.setText(cliente.getNome());
        }
    }
    
    public void imprimirRecibo() {
        float valorRecibo = 0.0f;
        String url = ("telas/Recibo/reciboPagamento.jasper");
        FormaPagamentoController formaPagamentoController = new FormaPagamentoController();
        Formapagamento forma = formaPagamentoController.consultar(vendas.getIdvendas());
        ParcelamentoPagamentoController parcelamentoPagamentoController = new ParcelamentoPagamentoController();
        List<Parcelamentopagamento> listaParcelamento = parcelamentoPagamentoController.listar(forma.getIdformaPagamento());
        if (listaParcelamento != null) {
            for (int i = 0; i < listaParcelamento.size(); i++) {
                if (listaParcelamento.get(i).getFormaPagamento().equalsIgnoreCase("Dinheiro")) {
                    valorRecibo = valorRecibo + listaParcelamento.get(i).getValorParcelamento();
                }
                if (listaParcelamento.get(i).getFormaPagamento().equalsIgnoreCase("cheque")) {
                    valorRecibo = valorRecibo + listaParcelamento.get(i).getValorParcelamento();
                }
                if (listaParcelamento.get(i).getFormaPagamento().equalsIgnoreCase("dep√≥sito")) {
                    valorRecibo = valorRecibo + listaParcelamento.get(i).getValorParcelamento();
                }
            }
        }
        if (valorRecibo > 0.0f) {
            Map parameters = new HashMap();
            try {
                parameters.put("idvendas", vendas.getIdvendas());

                String valorExtenso = Formatacao.valorPorExtenso(valorRecibo);
                parameters.put("valorExtenso", valorExtenso);
                parameters.put("valorRecibo", valorRecibo);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel gerar o relat√≥rio " + ex);
                ex.printStackTrace();
            }
            new relatoriosJasper(url, parameters);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Sem recibo para imprimir");
        }
    }
    
    public void emitirEmailGerencial() {
        EnviarEmailBean email = new EnviarEmailBean();
        if (novaFicha) {
            email.setTitulo("Nova Ficha de Visto");
            email.setTipoAviso("Inclus√£o");
            email.setDataInclusao(Formatacao.ConvercaoDataPadrao(vendas.getDataVenda()));
            email.setValor(Formatacao.formatarFloatString(vendas.getValor()));
            if (cambio==null){
                email.setCambio("0,00");
            }else email.setCambio(Formatacao.formatarFloatString(cambio.getValor()));
            email.setSiglaCambio("R$");
        } else {
            email.setTitulo("Ficha de Visto Alterada");
            email.setTipoAviso("Altera√ß√£o");
            email.setDataAlteracao(Formatacao.ConvercaoDataPadrao(new Date()));
            email.setDadosAlterados(dadosAlterado);
        }
        if (vendas.getVendasMatriz().equalsIgnoreCase("S")){
            email.setTipoVenda("Venda pela Matriz");
        }else email.setTipoVenda("Venda pela Loja");
        if (vendas.getFornecedorcidade().getFornecedor()!=null){
            email.setNomeEscola(vendas.getFornecedorcidade().getFornecedor().getNome());
        }
        email.setUnidadeNegocio(usuarioLogadoBean.getUnidadeNegocio().getNomeFantasia());
        email.setNomeCliente(cliente.getNome());
        email.setDatainicio(Formatacao.ConvercaoDataPadrao(vistos.getDataInicio()));
        email.setConsultor(usuarioLogadoBean.getUsuario().getNome());
        email.setObsTM(vendas.getObstm());
        email.setIdProduto(usuarioLogadoBean.getParametrosprodutos().getVisto());
        if (novaFicha){
            email.criarCorpoEmailInclusao();
        }else email.criarCorpoEmailAteracao();
        email.enviarEmail();
    }
    
    public void calcularParcelamentoPagamento() {
        if (listaParcelamento != null) {
            Float valorParcelado = 0.0f;
            for (int i = 0; i < listaParcelamento.size(); i++) {
                valorParcelado = valorParcelado + listaParcelamento.get(i).getValorParcelamento();
            }
            Float saldo = (valorTotal + valorJuros) - valorParcelado;
            saldoParcelarjTextField.setText(Formatacao.formatarFloatString(saldo));
        }
    }
    
    public void carregarModelParcelamento(){
        List<Parcelamentopagamento> listanova=null;
        listanova = listaParcelamento;
        if (formaPagamento != null) {
            ParcelamentoPagamentoController parcelamentoPagamentoController = new ParcelamentoPagamentoController();
            listaParcelamento = parcelamentoPagamentoController.listar(formaPagamento.getIdformaPagamento());
            if (listaParcelamento == null) {
                listaParcelamento = new ArrayList<Parcelamentopagamento>();
            }
        }else {
                listaParcelamento = new ArrayList<Parcelamentopagamento>();
        }
        if (listanova != null) {
            for (int i = 0; i < listanova.size(); i++) {
                if (listanova.get(i).getIdparcemlamentoPagamento() == null) {
                    listaParcelamento.add(listanova.get(i));
                }
            }
        }
        modelParcelamento = new ConsultaParcelamentoPagamentoTableModel(listaParcelamento);
        parcelamentojTable.setModel(modelParcelamento);
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.RIGHT);
        parcelamentojTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        parcelamentojTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        parcelamentojTable.getColumnModel().getColumn(2).setCellRenderer(renderer);
        parcelamentojTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        parcelamentojTable.getColumnModel().getColumn(3).setCellRenderer(renderer);
        parcelamentojTable.getColumnModel().getColumn(3).setPreferredWidth(20);
        parcelamentojTable.getColumnModel().getColumn(4).setCellRenderer(renderer);
        parcelamentojTable.getColumnModel().getColumn(4).setPreferredWidth(50);
        parcelamentojTable.repaint();
    }
    
    public void salvarFollowup(){
        FollowupController followupController = new FollowupController();
        followupController.fecharFollowUpCliente(cliente.getIdcliente());
    }
    
    public void salvarControle() {
        VistosController vistosController = new VistosController();
        Controlevistos controle = vistosController.consultarControleVistos(this.vendas.getIdvendas());
        if (controle == null) {
            controle = new Controlevistos();
            controle.setVendas(vendas.getIdvendas());
            controle.setEmailOrientacao("N√£o");
            controle.setConfirmacaoMatricula("N√£o");
            controle.setRascunhoFormularios("N√£o");
            controle.setPreenchimentoFormularios("N√£o");
            controle.setConferenciaDocumentos("N√£o");
            controle.setEnvioProcessamento("N√£o");
            controle.setProtocolo("N√£o");
            controle.setVistoLiberado("N√£o");
            controle.setPaisVisto(" ");
            controle.setCategoria(" ");
            controle.setObservacao(" ");
            controle.setFinalizado("Processo");
            controle.setSituacao("Processo");
            controle = vistosController.salvar(controle);
        }
    }
    
    @Override
    public void setValorJuros(Float valorJuros) {
        valorJurosjTextField.setText(Formatacao.formatarFloatString(valorJuros));
        valorJurosjTextField.requestFocus();
    }
    public void limitarJText(){
        duracaojTextField.setDocument(new LimiteTextoJedit(50));
        paisDestinojTextField.setDocument(new LimiteTextoJedit(50));
        tipoVistojTextField.setDocument(new LimiteTextoJedit(30));        
        observacaojTextField.setDocument(new LimiteTextoJedit(100));        
                
    }
    
    public String validarFormaPagamento(){
        String msg = "";
        if (dataVencimentojDateChooser.getDate()==null){
            msg = msg + "Data primeiro vencimento obrigat√≥ria";
        }
        if (meioPagamentojComboBox.getSelectedItem().toString().equalsIgnoreCase("Selecione")){
            msg = msg + "Campo forma de pagamento obrigat√≥rio";
        }
        return msg;
    }

    @Override
    public void setValores(Valoresvistos valoresVistos) {
        if (valoresVistos!=null){
            this.valoresVistos = valoresVistos;
            paisDestinojTextField.setText(valoresVistos.getFornecedorcidade().getCidade().getPais().getNome());
            valorVistojTextField.setText(Formatacao.formatarFloatString(valoresVistos.getValorgross()));
            tipoVistojTextField.setText(valoresVistos.getCategoria());
        }else JOptionPane.showMessageDialog(rootPane, "Valor do Visto n√£o Localizado");
    }
    
    public void calcularComissao() {
        VendasComissaoController vendasComissaoController = new VendasComissaoController();
        Vendascomissao vendasComissao = vendasComissaoController.getVendaComissao(vendas.getIdvendas(), usuarioLogadoBean.getParametrosprodutos().getCursos());
        if (vendasComissao != null) {
            if (vendasComissao.getPaga().equalsIgnoreCase("N√£o")) {
                try {
                    ComissaoVisto cc = new ComissaoVisto(usuarioLogadoBean, vendas, valoresVistos, listaParcelamento, vistos.getDataInicio(), 0, 0, Formatacao.SomarDiasDatas(vendas.getDataVenda(), 30), vendasComissao);
                } catch (Exception ex) {
                    Logger.getLogger(FrmVisto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }
    
    public boolean excluirComissao(){
        boolean validar = true;
        VendasComissaoController vendasComissaoController = new VendasComissaoController();
        Vendascomissao vendasComissao = vendasComissaoController.getVendaComissao(vendas.getIdvendas(), vendas.getProdutos());
        if (vendasComissao!=null){
            if (vendasComissao.getPaga().equalsIgnoreCase("N√£o")){
                vendasComissaoController.excluir(vendasComissao.getIdvendascomissao());
                validar=true;
            }else {
                validar = false;
            }
        }
        return validar;
    }
    
    public boolean excluirContasReceber(){
        ContasReceberController contasReceberCotroller = new ContasReceberController();
        List<Contasreceber> listaContas = contasReceberCotroller.listar(vendas.getIdvendas());
        boolean validar=true;
        if (listaContas!=null){
            for(int i=0;i<listaContas.size();i++){
                if (listaContas.get(i).getDatapagamento()!=null){
                    validar=false;
                    i=10000;
                }
            }
            if (validar){
                for(int i=0;i<listaContas.size();i++){
                    contasReceberCotroller.excluir(listaContas.get(i).getIdcontasreceber());
                }
            }
        }
        return validar;
    }
    
    
     public void carregarVistoAlteracao(){
        vistosAlterado = new Vistos();
        vistosAlterado.setControle(vistos.getControle());
        vistosAlterado.setDataEntregaDocumentos(vistos.getDataEntregaDocumentos());
        vistosAlterado.setDataInicio(vistos.getDataInicio());
        vistosAlterado.setDuracao(vistos.getDuracao());
        vistosAlterado.setIdvistos(vistos.getIdvistos());
        vistosAlterado.setObservacao(vistos.getObservacao());
        vistosAlterado.setObstm(vistos.getObstm());
        vistosAlterado.setPaisDestino(vistos.getPaisDestino());
        vistosAlterado.setPossuiVisto(vistos.getPossuiVisto());
        vistosAlterado.setTipoVisto(vistos.getTipoVisto());
        vistosAlterado.setValorEmissao(vistos.getValorEmissao());
        vistosAlterado.setValoresvistos(vistos.getValoresvistos());
        vistosAlterado.setVendas(vistos.getVendas());
    }
     
     public void verificarDadosAlterado() {
        dadosAlterado="";
        if (vistos.getControle()!= null) {
            if (!vistos.getControle().equalsIgnoreCase(vistosAlterado.getControle())) {
                dadosAlterado = "Controle : " + vistos.getControle() + " | " + vistosAlterado.getControle() + "<br></br>";
            }
        }
        if (vistos.getDuracao()!= null) {
            if (!vistos.getDuracao().equals(vistosAlterado.getDuracao())) {
                dadosAlterado = dadosAlterado + "Dura√ß√£o : " + vistos.getDuracao() + " | " + vistosAlterado.getDuracao() + "<br></br>";
            }
        }
        if (vistos.getObservacao()!= null) {
            if (!vistos.getObservacao().equalsIgnoreCase(vistosAlterado.getObservacao())) {
                dadosAlterado = dadosAlterado + "Observa√ß√µes : " + vistos.getObservacao() + " | " + vistosAlterado.getObservacao() + "<br></br>";
            }
        }
        
        if (vistos.getObstm()!= null) {
            if (!vistos.getObstm().equalsIgnoreCase(vistosAlterado.getObstm())) {
                dadosAlterado = dadosAlterado + "Obs TM : " + vistos.getObstm() + " | " + vistosAlterado.getObstm() + "<br></br>";
            }
        }
        if (vistos.getPaisDestino()!= null) {
            if (!vistos.getPaisDestino().equalsIgnoreCase(vistosAlterado.getPaisDestino())) {
                dadosAlterado = dadosAlterado + "Pa√≠s Destino : " + vistos.getPaisDestino() + " | " + vistosAlterado.getPaisDestino() + "<br></br>";
            }
        }
        if (vistos.getPossuiVisto()!= null) {
            if (!vistos.getPossuiVisto().equalsIgnoreCase(vistosAlterado.getPossuiVisto())) {
                dadosAlterado = dadosAlterado + "Possu√≠ Visto : " + vistos.getPossuiVisto() + " | " + vistosAlterado.getPossuiVisto() + "<br></br>";
            }
        }
        if (vistos.getTipoVisto()!= null) {
            if (!vistos.getTipoVisto().equalsIgnoreCase(vistosAlterado.getTipoVisto())) {
                dadosAlterado = dadosAlterado + "Tipo Visto : " + vistos.getTipoVisto() + " | " + vistosAlterado.getTipoVisto() + "<br></br>";
            }
        }
        if (vistos.getDataEntregaDocumentos()!= null) {
            if (!vistos.getDataEntregaDocumentos().equals(vistosAlterado.getDataEntregaDocumentos())) {
                dadosAlterado = dadosAlterado + "Data Entrega dos Documentos : " + Formatacao.ConvercaoDataPadrao(vistos.getDataEntregaDocumentos()) + " | " + Formatacao.ConvercaoDataPadrao(vistosAlterado.getDataEntregaDocumentos()) + "<br></br>";
            }
        }
        if (vistos.getDataInicio()!= null) {
            if (!vistos.getDataInicio().equals(vistosAlterado.getDataInicio())) {
                dadosAlterado = dadosAlterado + "Data de In√≠cio : " + Formatacao.ConvercaoDataPadrao(vistos.getDataInicio()) + " | " + Formatacao.ConvercaoDataPadrao(vistosAlterado.getDataInicio()) + "<br></br>";
            }
        }
        if (valorVendaAlterar != vendas.getValor()) {
                dadosAlterado = dadosAlterado + "Valor Total : " + Formatacao.formatarFloatString(vendas.getValor()) + " | " + Formatacao.formatarFloatString(valorVendaAlterar) + "<br></br>";
        }
     }

}


