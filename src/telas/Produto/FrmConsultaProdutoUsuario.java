/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.Produto;

import controller.NotificacaoEmailController;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import model.Notificacaoemail;
import model.Produtos;
import model.Usuario;
import model.view.Viewnotificacaoemail;
import telas.Usuarios.FrmConsultarUsuario;
import telas.Usuarios.UsuarioLogadoBean;

/**
 *
 * @author Wolverine
 */
public class FrmConsultaProdutoUsuario extends javax.swing.JFrame implements IProdutos {
    
    private List<Viewnotificacaoemail> listaUsuario;
    private ConsultaUsuarioTableModel modelUsuario;
    private UsuarioLogadoBean usuarioLogadoBean;
    private Produtos produtos;
    /**
     * Creates new form FrmConsultaCliente
     */
    public FrmConsultaProdutoUsuario(UsuarioLogadoBean usuarioLogadoBean, Produtos produto) {
        this.usuarioLogadoBean = usuarioLogadoBean;
        this.produtos = produto;
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo/logotela.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        carregarModelUsuario();
        produtojLabel.setText("Produto :  " + produto.getDescricao());
        this.setVisible(true);
    }
    
    
    
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        usuariosjTable = new javax.swing.JTable();
        BarradeTarefasjToolBar = new javax.swing.JToolBar();
        AdicionarjButton = new javax.swing.JButton();
        SeparadordeTarefasjSeparator1 = new javax.swing.JToolBar.Separator();
        excluirjButton = new javax.swing.JButton();
        FecharrjButton1 = new javax.swing.JButton();
        produtojLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Usuários");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        usuariosjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "Cargo", "E-mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usuariosjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usuariosjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(usuariosjTable);
        usuariosjTable.getColumnModel().getColumn(0).setResizable(false);
        usuariosjTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        usuariosjTable.getColumnModel().getColumn(1).setResizable(false);
        usuariosjTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        usuariosjTable.getColumnModel().getColumn(2).setResizable(false);
        usuariosjTable.getColumnModel().getColumn(2).setPreferredWidth(200);

        BarradeTarefasjToolBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        BarradeTarefasjToolBar.setFloatable(false);
        BarradeTarefasjToolBar.setRollover(true);

        AdicionarjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/adicionar.png"))); // NOI18N
        AdicionarjButton.setText("Adicionar");
        AdicionarjButton.setToolTipText("Adicionar Usuário");
        AdicionarjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AdicionarjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        AdicionarjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        AdicionarjButton.setName(""); // NOI18N
        AdicionarjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        AdicionarjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        AdicionarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdicionarjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(AdicionarjButton);
        BarradeTarefasjToolBar.add(SeparadordeTarefasjSeparator1);

        excluirjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/excluir.png"))); // NOI18N
        excluirjButton.setText("Excluir");
        excluirjButton.setToolTipText("Excluir Usuário");
        excluirjButton.setEnabled(false);
        excluirjButton.setFocusable(false);
        excluirjButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        excluirjButton.setMaximumSize(new java.awt.Dimension(80, 90));
        excluirjButton.setMinimumSize(new java.awt.Dimension(80, 90));
        excluirjButton.setName(""); // NOI18N
        excluirjButton.setPreferredSize(new java.awt.Dimension(80, 90));
        excluirjButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(excluirjButton);

        FecharrjButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/fechar.png"))); // NOI18N
        FecharrjButton1.setText("Fechar");
        FecharrjButton1.setToolTipText("Fechar");
        FecharrjButton1.setFocusable(false);
        FecharrjButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        FecharrjButton1.setMaximumSize(new java.awt.Dimension(80, 90));
        FecharrjButton1.setMinimumSize(new java.awt.Dimension(80, 90));
        FecharrjButton1.setPreferredSize(new java.awt.Dimension(80, 90));
        FecharrjButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        FecharrjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FecharrjButton1ActionPerformed(evt);
            }
        });
        BarradeTarefasjToolBar.add(FecharrjButton1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(167, 167, 167)
                    .addComponent(BarradeTarefasjToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(149, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(227, 227, 227)
                    .addComponent(BarradeTarefasjToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(14, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 570, 330));

        produtojLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        produtojLabel.setText("Produto :");
        getContentPane().add(produtojLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 560, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usuariosjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usuariosjTableMouseClicked
        if (evt.getClickCount()==1){
            excluirjButton.setEnabled(true);
        }
    }//GEN-LAST:event_usuariosjTableMouseClicked

    private void AdicionarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdicionarjButtonActionPerformed
        if (usuarioLogadoBean.getAcesso().getSegurancausuario()==1){
            new FrmConsultarUsuario(this, usuarioLogadoBean);
        }else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado");
        }
    }//GEN-LAST:event_AdicionarjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        if (usuarioLogadoBean.getAcesso().getProdutoUsuario()==1){
            int linha = usuariosjTable.getSelectedRow();
            if (linha>=0){
                NotificacaoEmailController notificacaoEmailController = new NotificacaoEmailController();
                notificacaoEmailController.excluir(listaUsuario.get(linha).getIdnotificacaoemail());
                carregarModelUsuario();
            }else {
                JOptionPane.showMessageDialog(rootPane, "Selecione um usuário");
            }
        }else {
            JOptionPane.showMessageDialog(rootPane, "Acesso Negado");
        }
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void FecharrjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FecharrjButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_FecharrjButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdicionarjButton;
    private javax.swing.JToolBar BarradeTarefasjToolBar;
    private javax.swing.JButton FecharrjButton1;
    private javax.swing.JToolBar.Separator SeparadordeTarefasjSeparator1;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel produtojLabel;
    private javax.swing.JTable usuariosjTable;
    // End of variables declaration//GEN-END:variables

    public void carregarModelUsuario(){
        NotificacaoEmailController notificacaoEmailController = new NotificacaoEmailController();
        listaUsuario = notificacaoEmailController.listar(produtos.getIdprodutos(), " ");
        if (listaUsuario==null){
            listaUsuario = new ArrayList<Viewnotificacaoemail>();
        }
        modelUsuario = new ConsultaUsuarioTableModel(listaUsuario);
        usuariosjTable.setModel(modelUsuario);
        usuariosjTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        usuariosjTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        usuariosjTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        usuariosjTable.repaint();
    }
    
    

    @Override
    public void setModel() {
        carregarModelUsuario();
    }

    @Override
    public void setUsuario(Usuario usuario) {
        if (usuario != null) {
            NotificacaoEmailController notificacaoEmailController = new NotificacaoEmailController();
            Notificacaoemail notificacao = new Notificacaoemail();
            notificacao.setProdutos(produtos.getIdprodutos());
            notificacao.setUsuario(usuario.getIdusuario());
            String tipoAviso = JOptionPane.showInputDialog("Tipo de Aviso\b\n" + "I - Inclusão\b\n" + "A - Alteração\b\n" + "T - Todas as operações" );
            notificacao.setTipoAviso(tipoAviso);
            notificacaoEmailController.salvar(notificacao);
            carregarModelUsuario();
        }
    }
    
    
}