/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.FollowUp;

import com.toedter.calendar.JTextFieldDateEditor;
import controller.AgendaController;
import controller.ClienteController;
import controller.ControleLojaController;
import controller.FollowupController;
import controller.ProdutoController;
import controller.PublicidadeController;
import controller.UsuarioController;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Agenda;
import model.Cliente;
import model.Controleloja;
import model.Followup;
import model.Produtos;
import model.Publicidade;
import model.Usuario;
import telas.Cliente.FrmCadastrarCliente;
import telas.Cliente.FrmConsultaCliente;
import telas.Usuarios.UsuarioLogadoBean;
import util.Formatacao;
import util.LimiteTextoJedit;

/**
 *
 * @author Wolverine
 */
public class FrmCadastrarFollowUp extends javax.swing.JFrame implements IFollowup {

    private Cliente cliente;
    private UsuarioLogadoBean usuarioLogadoBean;
    private Followup followup;
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private IFollowup telaFollowup;
    String caracteres = "0987654321-()";
    

    /**
     * Creates new form FrmCadastrarEvento
     */
    public FrmCadastrarFollowUp(UsuarioLogadoBean usuarioLogadoBean, Followup followup, IFollowup telaFollowup) {
        this.followup = followup;
        this.telaFollowup = telaFollowup;
        this.usuarioLogadoBean = usuarioLogadoBean;
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/##";
        placeHolder = '_';
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo/logotela.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        limitarJText();
        inicializar();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nomeClientejTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        emailjTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dataProximoContatojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    nivelInteresejComboBox = new javax.swing.JComboBox();
    jLabel2 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    historicojTextArea = new javax.swing.JTextArea();
    consultorjComboBox = new javax.swing.JComboBox();
    horajFormattedTextField = new javax.swing.JFormattedTextField();
    jLabel8 = new javax.swing.JLabel();
    jLabel36 = new javax.swing.JLabel();
    publicidadejComboBox = new javax.swing.JComboBox();
    complementoPublicidadejTextField = new javax.swing.JTextField();
    jLabel9 = new javax.swing.JLabel();
    produtojComboBox = new javax.swing.JComboBox();
    paisjTextField = new javax.swing.JTextField();
    jLabel10 = new javax.swing.JLabel();
    proximoEventojComboBox = new javax.swing.JComboBox();
    jLabel11 = new javax.swing.JLabel();
    foneResidencialjCheckBox = new javax.swing.JCheckBox();
    foneResidencialjTextField = new javax.swing.JTextField();
    foneCelularjTextField = new javax.swing.JTextField();
    foneCelularjCheckBox = new javax.swing.JCheckBox();
    foneComercialjCheckBox = new javax.swing.JCheckBox();
    foneComercialjTextField = new javax.swing.JTextField();
    jPanel4 = new javax.swing.JPanel();
    jButton2 = new javax.swing.JButton();
    jButton3 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Cadastrar Evento");

    jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel3.setText("Pesquisar Cliente");

    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/selecionar.png"))); // NOI18N
    jButton1.setText("Selecionar");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jLabel6.setText("E-mail");

    jLabel1.setText("Nível Interesse");

    jLabel7.setText("Data Próximo Contato");

    nivelInteresejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Baixo", "Médio", "Alto", "Fechamento" }));

    jLabel2.setText("Consultor");

    jLabel4.setText("Histórico");

    historicojTextArea.setColumns(20);
    historicojTextArea.setRows(5);
    jScrollPane1.setViewportView(historicojTextArea);

    consultorjComboBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            consultorjComboBoxItemStateChanged(evt);
        }
    });
    consultorjComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            consultorjComboBoxActionPerformed(evt);
        }
    });

    jLabel8.setText("Hora");

    jLabel36.setText("Como conheceu a TravelMate");

    jLabel9.setText("Produto de interesse");

    produtojComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            produtojComboBoxActionPerformed(evt);
        }
    });

    jLabel10.setText("País de interesse");

    proximoEventojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Agendamento", "Atendimento presencial", "E-mail", "On line", "Processo", "Telefonema", "Walk-In" }));
    proximoEventojComboBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            proximoEventojComboBoxItemStateChanged(evt);
        }
    });
    proximoEventojComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            proximoEventojComboBoxActionPerformed(evt);
        }
    });

    jLabel11.setText("Próximo Evento");

    foneResidencialjCheckBox.setText("9-Fone Residencial");
    foneResidencialjCheckBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            foneResidencialjCheckBoxItemStateChanged(evt);
        }
    });

    foneResidencialjTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            foneResidencialjTextFieldFocusLost(evt);
        }
    });
    foneResidencialjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            foneResidencialjTextFieldKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            foneResidencialjTextFieldKeyTyped(evt);
        }
    });

    foneCelularjTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            foneCelularjTextFieldFocusLost(evt);
        }
    });
    foneCelularjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            foneCelularjTextFieldKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            foneCelularjTextFieldKeyTyped(evt);
        }
    });

    foneCelularjCheckBox.setText("9-Fone Celular");
    foneCelularjCheckBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            foneCelularjCheckBoxItemStateChanged(evt);
        }
    });

    foneComercialjCheckBox.setText("9-Fone Comercial");
    foneComercialjCheckBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            foneComercialjCheckBoxItemStateChanged(evt);
        }
    });

    foneComercialjTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            foneComercialjTextFieldFocusLost(evt);
        }
    });
    foneComercialjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            foneComercialjTextFieldKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            foneComercialjTextFieldKeyTyped(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel3)
                    .addGap(244, 585, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(nomeClientejTextField)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(publicidadejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(complementoPublicidadejTextField))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(produtojComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(proximoEventojComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(18, 96, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(dataProximoContatojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(horajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(21, 21, 21)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(paisjTextField)))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(nivelInteresejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(consultorjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(foneResidencialjCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(foneResidencialjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(foneCelularjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(foneCelularjCheckBox))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(foneComercialjCheckBox)
                                .addComponent(foneComercialjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(emailjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6))))
                    .addContainerGap())))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel3)
                    .addGap(26, 26, 26))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(foneResidencialjCheckBox)
                        .addComponent(foneCelularjCheckBox)
                        .addComponent(foneComercialjCheckBox)
                        .addComponent(jLabel6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(foneResidencialjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(foneCelularjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(foneComercialjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(emailjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(8, 8, 8)
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(nivelInteresejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel36))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addComponent(jLabel2)
                    .addGap(8, 8, 8)
                    .addComponent(consultorjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(publicidadejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(complementoPublicidadejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jLabel11))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dataProximoContatojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(horajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addComponent(proximoEventojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel10)
                .addComponent(jLabel9))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(produtojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(paisjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/confirmar.png"))); // NOI18N
    jButton2.setText("Confirmar");
    jButton2.setToolTipText("Confirma Cadastro de FollowUp");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/cancel.png"))); // NOI18N
    jButton3.setText("Cancelar");
    jButton3.setToolTipText("Cancela Cadastro de FollowUp");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(30, 30, 30)
            .addComponent(jButton2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(29, 29, 29))
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton2)
                .addComponent(jButton3))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 10, Short.MAX_VALUE))
        .addGroup(layout.createSequentialGroup()
            .addGap(144, 144, 144)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(23, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String msg = validarAgenda();
        if (msg.length() > 5) {
            JOptionPane.showMessageDialog(rootPane, msg);
        } else {
            salvarCliente();
            salvarFollowup();
            this.telaFollowup.setModel();
            this.dispose();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new FrmConsultaCliente(this.usuarioLogadoBean, this);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void proximoEventojComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_proximoEventojComboBoxItemStateChanged
        String tipo = proximoEventojComboBox.getSelectedItem().toString();
        if (tipo.equalsIgnoreCase("agendamento")) {
            horajFormattedTextField.setEnabled(true);
        }  else if (tipo.equalsIgnoreCase("atendimento presencial")) {
            horajFormattedTextField.setEnabled(true);
        }

    }//GEN-LAST:event_proximoEventojComboBoxItemStateChanged

    private void foneResidencialjCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_foneResidencialjCheckBoxItemStateChanged
        foneResidencialjTextField.setText("");
        foneResidencialjTextField.requestFocus();
    }//GEN-LAST:event_foneResidencialjCheckBoxItemStateChanged

    private void foneResidencialjTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_foneResidencialjTextFieldFocusLost
        caracteres = "0987654321-()";
    }//GEN-LAST:event_foneResidencialjTextFieldFocusLost

    private void foneResidencialjTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foneResidencialjTextFieldKeyPressed
        if ((evt.getKeyCode() != KeyEvent.VK_DELETE) && (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)) {
            String texto = foneResidencialjTextField.getText();
            if (foneResidencialjTextField.getText().length() == 0) {
                foneResidencialjTextField.setText("(");
            } else if (foneResidencialjTextField.getText().length() == 3) {
                foneResidencialjTextField.setText(foneResidencialjTextField.getText() + ")");
            }
            if (foneResidencialjCheckBox.isSelected()) {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneResidencialjTextField.getText().length() == 8) {
                        foneResidencialjTextField.setText(foneResidencialjTextField.getText() + '-');
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneResidencialjTextField.getText().length() == 9) {
                            foneResidencialjTextField.setText(foneResidencialjTextField.getText() + '-');
                        }
                    }
                }
            } else {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneResidencialjTextField.getText().length() == 9) {
                        foneResidencialjTextField.setText(foneResidencialjTextField.getText() + '-');
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneResidencialjTextField.getText().length() == 8) {
                            foneResidencialjTextField.setText(foneResidencialjTextField.getText() + '-');
                        }
                    }
                }
            }
            if (foneResidencialjCheckBox.isSelected()) {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneResidencialjTextField.getText().length() > 12) {
                        caracteres = "";
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneResidencialjTextField.getText().length() > 13) {
                            caracteres = "";
                        }
                    }
                }

            } else {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneResidencialjTextField.getText().length() > 13) {
                        caracteres = "";
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneResidencialjTextField.getText().length() > 12) {
                            caracteres = "";
                        }
                    }
                }
            }
        } else {
            foneResidencialjTextField.setText("");
        }
    }//GEN-LAST:event_foneResidencialjTextFieldKeyPressed

    private void foneResidencialjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foneResidencialjTextFieldKeyTyped
        if (evt.getKeyChar() == '.') {
            evt.setKeyChar(',');
        }
        if (evt.getKeyChar() != '\b') {
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_foneResidencialjTextFieldKeyTyped

    private void foneCelularjTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_foneCelularjTextFieldFocusLost
        caracteres = "0987654321-()";
    }//GEN-LAST:event_foneCelularjTextFieldFocusLost

    private void foneCelularjTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foneCelularjTextFieldKeyPressed
        if ((evt.getKeyCode() != KeyEvent.VK_DELETE) && (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)) {
            String texto = foneCelularjTextField.getText();
            if (foneCelularjTextField.getText().length() == 0) {
                foneCelularjTextField.setText("(");
            } else if (foneCelularjTextField.getText().length() == 3) {
                foneCelularjTextField.setText(foneCelularjTextField.getText() + ")");
            }
            if (foneCelularjCheckBox.isSelected()) {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneCelularjTextField.getText().length() == 8) {
                        foneCelularjTextField.setText(foneCelularjTextField.getText() + '-');
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneCelularjTextField.getText().length() == 9) {
                            foneCelularjTextField.setText(foneCelularjTextField.getText() + '-');
                        }
                    }
                }
            } else {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneCelularjTextField.getText().length() == 9) {
                        foneCelularjTextField.setText(foneCelularjTextField.getText() + '-');
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneCelularjTextField.getText().length() == 8) {
                            foneCelularjTextField.setText(foneCelularjTextField.getText() + '-');
                        }
                    }
                }
            }
            if (foneCelularjCheckBox.isSelected()) {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneCelularjTextField.getText().length() > 12) {
                        caracteres = "";
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneCelularjTextField.getText().length() > 13) {
                            caracteres = "";
                        }
                    }
                }

            } else {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneCelularjTextField.getText().length() > 13) {
                        caracteres = "";
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneCelularjTextField.getText().length() > 12) {
                            caracteres = "";
                        }
                    }
                }
            }
        } else {
            foneCelularjTextField.setText("");
        }
    }//GEN-LAST:event_foneCelularjTextFieldKeyPressed

    private void foneCelularjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foneCelularjTextFieldKeyTyped
        if (evt.getKeyChar() == '.') {
            evt.setKeyChar(',');
        }
        if (evt.getKeyChar() != '\b') {
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_foneCelularjTextFieldKeyTyped

    private void foneCelularjCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_foneCelularjCheckBoxItemStateChanged
        foneCelularjTextField.setText("");
        foneCelularjTextField.requestFocus();
    }//GEN-LAST:event_foneCelularjCheckBoxItemStateChanged

    private void foneComercialjCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_foneComercialjCheckBoxItemStateChanged
        foneComercialjTextField.setText("");
        foneComercialjTextField.requestFocus();
    }//GEN-LAST:event_foneComercialjCheckBoxItemStateChanged

    private void foneComercialjTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_foneComercialjTextFieldFocusLost
        caracteres = "0987654321-()";
    }//GEN-LAST:event_foneComercialjTextFieldFocusLost

    private void foneComercialjTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foneComercialjTextFieldKeyPressed
        if ((evt.getKeyCode() != KeyEvent.VK_DELETE) && (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)) {
            String texto = foneComercialjTextField.getText();
            if (foneComercialjTextField.getText().length() == 0) {
                foneComercialjTextField.setText("(");
            } else if (foneComercialjTextField.getText().length() == 3) {
                foneComercialjTextField.setText(foneComercialjTextField.getText() + ")");
            }
            if (foneComercialjCheckBox.isSelected()) {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneComercialjTextField.getText().length() == 8) {
                        foneComercialjTextField.setText(foneComercialjTextField.getText() + '-');
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneComercialjTextField.getText().length() == 9) {
                            foneComercialjTextField.setText(foneComercialjTextField.getText() + '-');
                        }
                    }
                }
            } else {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneComercialjTextField.getText().length() == 9) {
                        foneComercialjTextField.setText(foneComercialjTextField.getText() + '-');
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneComercialjTextField.getText().length() == 8) {
                            foneComercialjTextField.setText(foneComercialjTextField.getText() + '-');
                        }
                    }
                }
            }
            if (foneComercialjCheckBox.isSelected()) {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneComercialjTextField.getText().length() > 12) {
                        caracteres = "";
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneComercialjTextField.getText().length() > 13) {
                            caracteres = "";
                        }
                    }
                }

            } else {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneComercialjTextField.getText().length() > 13) {
                        caracteres = "";
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneComercialjTextField.getText().length() > 12) {
                            caracteres = "";
                        }
                    }
                }
            }
        } else {
            foneComercialjTextField.setText("");
        }
    }//GEN-LAST:event_foneComercialjTextFieldKeyPressed

    private void foneComercialjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foneComercialjTextFieldKeyTyped
        if (evt.getKeyChar() == '.') {
            evt.setKeyChar(',');
        }
        if (evt.getKeyChar() != '\b') {
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_foneComercialjTextFieldKeyTyped

    private void consultorjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultorjComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_consultorjComboBoxActionPerformed

    private void proximoEventojComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proximoEventojComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proximoEventojComboBoxActionPerformed

    private void consultorjComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_consultorjComboBoxItemStateChanged
       
        
    }//GEN-LAST:event_consultorjComboBoxItemStateChanged

    private void produtojComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_produtojComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_produtojComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField complementoPublicidadejTextField;
    private javax.swing.JComboBox consultorjComboBox;
    private com.toedter.calendar.JDateChooser dataProximoContatojDateChooser;
    private javax.swing.JTextField emailjTextField;
    private javax.swing.JCheckBox foneCelularjCheckBox;
    private javax.swing.JTextField foneCelularjTextField;
    private javax.swing.JCheckBox foneComercialjCheckBox;
    private javax.swing.JTextField foneComercialjTextField;
    private javax.swing.JCheckBox foneResidencialjCheckBox;
    private javax.swing.JTextField foneResidencialjTextField;
    private javax.swing.JTextArea historicojTextArea;
    private javax.swing.JFormattedTextField horajFormattedTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox nivelInteresejComboBox;
    private javax.swing.JTextField nomeClientejTextField;
    private javax.swing.JTextField paisjTextField;
    private javax.swing.JComboBox produtojComboBox;
    private javax.swing.JComboBox proximoEventojComboBox;
    private javax.swing.JComboBox publicidadejComboBox;
    // End of variables declaration//GEN-END:variables
    
    @Override
    public void setCliente(Cliente cliente) {
        if (cliente != null) {
            this.cliente = cliente;
            nomeClientejTextField.setText(cliente.getNome());
            foneResidencialjTextField.setText(cliente.getFoneResidencial());
            foneCelularjTextField.setText(cliente.getFoneCelular());
            foneComercialjTextField.setText(cliente.getFoneComercial());
            emailjTextField.setText(cliente.getEmail());
        }
    }

    public void salvarCliente() {
        if (cliente == null) {
            cliente = new Cliente();
            cliente.setDataCadastro(new Date());
            cliente.setUnidadenegocio(usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio());
        }
        cliente.setNome(nomeClientejTextField.getText());
        cliente.setFoneResidencial(foneResidencialjTextField.getText());
        cliente.setFoneCelular(foneCelularjTextField.getText());
        cliente.setFoneComercial(foneComercialjTextField.getText());
        cliente.setEmail(emailjTextField.getText());
        cliente.setTipoCliente("FollowUp");
        Publicidade publicidade = (Publicidade) publicidadejComboBox.getSelectedItem();
        if (publicidade != null) {
            cliente.setPublicidade(publicidade.getIdpublicidade());
        } else {
            cliente.setPublicidade(1);
        }
        cliente.setComplementopublicidade(complementoPublicidadejTextField.getText());
        ClienteController clienteController = new ClienteController();
        cliente = clienteController.salvar(cliente);
    }

    public String validarAgenda() {
        String msg = "";
        if (dataProximoContatojDateChooser.getDate() == null) {
            msg = "Data Próximo Contato invalida\r\n";
        }
        if (nomeClientejTextField.getText().length() == 0) {
            msg = "Nome do cliente não preenchido\r\n";
        }
        if (emailjTextField.getText().length() == 0) {
            msg = "Email do  cliente não preenchido\r\n";
        }
        if (foneCelularjTextField.getText().equalsIgnoreCase("(  )    -    ")) {
            msg = "Telefone celular não preenchido\r\n";
        }
        Object consultor = consultorjComboBox.getSelectedItem();
        if (!(consultor instanceof Usuario)){
            msg = "Consultor não selecionado.\r\n";
        }
        return msg;
    }

    public void salvarFollowup() {
        int idFollowup = 0;
        if (followup == null) {
            followup = new Followup();
        } else {
            idFollowup = followup.getIdfollowup();
        }
        try {
            followup.setHoraproximocontato(Formatacao.converterStringHora(horajFormattedTextField.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(FrmCadastrarFollowUp.class.getName()).log(Level.SEVERE, null, ex);
        }
        followup.setDataProximoContato(dataProximoContatojDateChooser.getDate());
        followup.setNivelInteresse(nivelInteresejComboBox.getSelectedItem().toString());
        followup.setHistorico(historicojTextArea.getText());
        followup.setCliente(cliente.getIdcliente());
        followup.setUnidadenegocio(usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio());
        followup.setUsuario(usuarioLogadoBean.getUsuario().getIdusuario());
        followup.setPais(paisjTextField.getText());
        followup.setDataInicio(new Date());
        followup.setFechou("Nao");
        Produtos produto = (Produtos) produtojComboBox.getSelectedItem();
        if (produto != null) {
            followup.setProduto(produto.getIdprodutos());
        }
        followup.setSituacao(proximoEventojComboBox.getSelectedItem().toString());
        FollowupController followupController = new FollowupController();
        followup = followupController.salvar(followup);
        Controleloja controleloja;
        ControleLojaController controleLojaController = new ControleLojaController();
        if (idFollowup == 0) {
            controleloja = new Controleloja();
        } else {
            controleloja = controleLojaController.consultar(idFollowup);
            if (controleloja==null){
                controleloja = new Controleloja();
            }
        }
        controleloja.setCliente(cliente.getIdcliente());
        controleloja.setData(new Date());
        controleloja.setHistorico(historicojTextArea.getText());
        controleloja.setHora(new Date());
        controleloja.setProximoEvento(proximoEventojComboBox.getSelectedItem().toString());
        controleloja.setUnidadenegocio(usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio());
        Usuario usuario = (Usuario) consultorjComboBox.getSelectedItem();
        controleloja.setUsuario(usuario.getIdusuario());
        controleloja.setIdFloowup(followup.getIdfollowup());
        controleloja = controleLojaController.salvar(controleloja);
        String tipo = proximoEventojComboBox.getSelectedItem().toString();
        if (tipo.equalsIgnoreCase("agendamento")) {
            salvarAgenda(tipo, controleloja.getIdcontroleLoja());
        } else if (tipo.equalsIgnoreCase("processo")) {
            salvarAgenda(tipo, controleloja.getIdcontroleLoja());
        } else if (tipo.equalsIgnoreCase("atendimento presencial")) {
            salvarAgenda(tipo, controleloja.getIdcontroleLoja());
        }
    }

    public void inicializar() {
        carregarComboBoxPublicidade();
        carregarComboBoxProduto();
        if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
            foneResidencialjCheckBox.setText("9-Fone Residencial");
            foneCelularjCheckBox.setText("9-Fone Celular");
            foneComercialjCheckBox.setText("9-Fone Comercial");
        } else {
            foneResidencialjCheckBox.setText("8-Fone Residencial");
            foneCelularjCheckBox.setText("8-Fone Celular");
            foneComercialjCheckBox.setText("8-Fone Comercial");
        }
        UsuarioController usuarioController = new UsuarioController();
        List<Usuario> listaUsuario = usuarioController.listaUsuario();
        if (listaUsuario == null) {
            listaUsuario = new ArrayList<Usuario>();
        }
        consultorjComboBox = Formatacao.preencherComobox(listaUsuario, consultorjComboBox, true, "Consultor");
        consultorjComboBox.setSelectedItem(usuarioLogadoBean.getUsuario());
        setMascaras();
        if (followup != null) {
            dataProximoContatojDateChooser.setDate(followup.getDataProximoContato());
            nivelInteresejComboBox.setSelectedItem(followup.getNivelInteresse());
            horajFormattedTextField.setText(new SimpleDateFormat("HH:mm").format(followup.getHoraproximocontato()));
            ClienteController clienteController = new ClienteController();
            cliente = clienteController.consultar(followup.getCliente());
            nomeClientejTextField.setText(cliente.getNome());
            complementoPublicidadejTextField.setText(cliente.getComplementopublicidade());
            foneComercialjTextField.setText(cliente.getFoneComercial());
            foneResidencialjTextField.setText(cliente.getFoneResidencial());
            foneCelularjTextField.setText(cliente.getFoneCelular());
            historicojTextArea.setText(followup.getHistorico());
            emailjTextField.setText(cliente.getEmail());
            paisjTextField.setText(followup.getPais());
            Usuario usuario = usuarioController.consultar(followup.getUsuario());
            consultorjComboBox.setSelectedItem(usuario);
            PublicidadeController publicidadeController = new PublicidadeController();
            Publicidade publicidade = publicidadeController.consultar(cliente.getPublicidade());
            if (publicidade != null) {
                publicidadejComboBox.setSelectedItem(publicidade);
            }
            ProdutoController produtoController = new ProdutoController();
            Produtos produtos = produtoController.consultar(followup.getProduto());
            if (produtos != null) {
                produtojComboBox.setSelectedItem(produtos);
            }
        }
    }

    public void setMascaras() {
        try {
            horajFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (ParseException ex) {
            Logger.getLogger(FrmCadastrarCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void setModel() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void salvarAgenda(String tipo, int idControleLoja) {
        AgendaController agendaController = new AgendaController();

        Agenda agenda = agendaController.consultarControle(idControleLoja);
        if (agenda == null) {
            agenda = new Agenda();
        }
        agenda.setCliente(cliente.getIdcliente());
        agenda.setData(dataProximoContatojDateChooser.getDate());
        agenda.setEvento(tipo + " - " + cliente.getNome());
        try {
            agenda.setHora(Formatacao.converterStringHora(horajFormattedTextField.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(FrmCadastrarHistorico.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (agenda.getHora() == null) {
            try {
                agenda.setHora(Formatacao.converterStringHora("00:00"));
            } catch (ParseException ex) {
                Logger.getLogger(FrmCadastrarFollowUp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        agenda.setQuemAgendou(usuarioLogadoBean.getUsuario().getNome());
        agenda.setSituacao("Agendado");
        agenda.setUnidadenegocio(usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio());
        Usuario usuario = (Usuario) consultorjComboBox.getSelectedItem();
        agenda.setUsuario(usuario.getIdusuario());
        agenda.setIdControleLoja(idControleLoja);
        agendaController.salvar(agenda);
    }

    public void carregarComboBoxPublicidade() {
        PublicidadeController publicidadeController = new PublicidadeController();
        List<Publicidade> listaPublicidade = publicidadeController.listar();
        if (listaPublicidade == null) {
            listaPublicidade = new ArrayList<Publicidade>();
        }
        publicidadejComboBox = Formatacao.preencherComobox(listaPublicidade, publicidadejComboBox, false, "Nenhum");
    }

    public void carregarComboBoxProduto() {
        ProdutoController produtoController = new ProdutoController();
        List<Produtos> listaProduto = produtoController.listarProdutos("");
        if (listaProduto == null) {
            listaProduto = new ArrayList<Produtos>();
        }
        produtojComboBox = Formatacao.preencherComobox(listaProduto, produtojComboBox, false, "Nenhum");
    }
    
    public void limitarJText() {
        emailjTextField.setDocument(new LimiteTextoJedit(100));
        foneResidencialjTextField.setDocument(new LimiteTextoJedit(14));
        foneCelularjTextField.setDocument(new LimiteTextoJedit(14));
        foneComercialjTextField.setDocument(new LimiteTextoJedit(14));
        complementoPublicidadejTextField.setDocument(new LimiteTextoJedit(100));
        paisjTextField.setDocument(new LimiteTextoJedit(70));
    }       
}
