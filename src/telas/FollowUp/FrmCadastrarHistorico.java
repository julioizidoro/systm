/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.FollowUp;

import com.toedter.calendar.JTextFieldDateEditor;
import controller.AgendaController;
import controller.ControleLojaController;
import controller.FollowupController;
import controller.UsuarioController;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.Agenda;
import model.Cliente;
import model.Controleloja;
import model.Followup;
import model.Usuario;
import telas.Usuarios.UsuarioLogadoBean;
import util.Formatacao;

/**
 *
 * @author Wolverine
 */
public class FrmCadastrarHistorico extends javax.swing.JFrame {
    
    private UsuarioLogadoBean usuarioLogadoBean;
    private Controleloja controleloja;
    private Cliente cliente;
    private IHistorico telaHistorico;
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private Followup followup;

    /**
     * Creates new form FrmCadastrarHistorico
     */
    public FrmCadastrarHistorico(UsuarioLogadoBean usuarioLogadoBean, Controleloja controleloja, Cliente cliente, Followup followup, IHistorico telaHistorico) {
        this.controleloja = controleloja;
        this.followup = followup;
        this.telaHistorico = telaHistorico;
        this.usuarioLogadoBean = usuarioLogadoBean;
        this.cliente = cliente;
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/##";
        placeHolder = '_';
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo/logotela.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        inicializa();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        historicojTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        proximoEventojComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dataProximoContatojDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    jLabel3 = new javax.swing.JLabel();
    horajFormattedTextField = new javax.swing.JFormattedTextField();
    consultorjComboBox = new javax.swing.JComboBox();
    jLabel5 = new javax.swing.JLabel();
    jPanel4 = new javax.swing.JPanel();
    jButton2 = new javax.swing.JButton();
    jButton3 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Cadastrar Hist贸rico");

    jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jLabel2.setText("Hist贸rico");

    historicojTextArea.setColumns(20);
    historicojTextArea.setLineWrap(true);
    historicojTextArea.setRows(5);
    historicojTextArea.setWrapStyleWord(true);
    jScrollPane1.setViewportView(historicojTextArea);

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pr贸ximo Contato"));

    proximoEventojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Agendamento", "Atendimento presencial", "On line", "Telefonema", " " }));
    proximoEventojComboBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            proximoEventojComboBoxItemStateChanged(evt);
        }
    });
    proximoEventojComboBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            proximoEventojComboBoxActionPerformed(evt);
        }
    });

    jLabel4.setText("Evento");

    jLabel7.setText("Data Pr贸ximo Contato");

    jLabel3.setText("Hora");

    horajFormattedTextField.setEnabled(false);

    jLabel5.setText("Consultor");

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dataProximoContatojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(horajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(proximoEventojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(0, 170, Short.MAX_VALUE))
                        .addComponent(consultorjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(horajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(proximoEventojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(consultorjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(dataProximoContatojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel7))))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addGap(0, 427, Short.MAX_VALUE))
                .addComponent(jScrollPane1)
                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/confirmar.png"))); // NOI18N
    jButton2.setText("Confirmar");
    jButton2.setToolTipText("Confirmar Cadastro de Hist贸rico");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/cancel.png"))); // NOI18N
    jButton3.setText("Cancelar");
    jButton3.setToolTipText("Cancela Cadastro de Hist贸rico");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(30, 30, 30)
            .addComponent(jButton2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18))
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton2)
                .addComponent(jButton3))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(93, 93, 93))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (controleloja==null){
            controleloja = new Controleloja();
        }
        controleloja.setCliente(cliente.getIdcliente());
        controleloja.setData(new Date());
        controleloja.setHistorico(historicojTextArea.getText());
        if (horajFormattedTextField.isEnabled()) {
            try {
                controleloja.setHora(Formatacao.converterStringHora(horajFormattedTextField.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(FrmCadastrarHistorico.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else {
            try {
                controleloja.setHora(Formatacao.converterStringHora("00:00"));
            } catch (ParseException ex) {
                Logger.getLogger(FrmCadastrarHistorico.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        controleloja.setData(dataProximoContatojDateChooser.getDate());
        controleloja.setProximoEvento(proximoEventojComboBox.getSelectedItem().toString());
        controleloja.setUnidadenegocio(usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio());
        Usuario usuario = (Usuario) consultorjComboBox.getSelectedItem();
        controleloja.setUsuario(usuario.getIdusuario());
        ControleLojaController controleLojaController = new ControleLojaController();
        controleloja = controleLojaController.salvar(controleloja);
        String tipo = proximoEventojComboBox.getSelectedItem().toString();
        if (tipo.equalsIgnoreCase("agendamento")){
            salvarAgenda(tipo, controleloja.getIdcontroleLoja());
        }else if (tipo.equalsIgnoreCase("processo")){
            salvarAgenda(tipo, controleloja.getIdcontroleLoja());
        }else if (tipo.equalsIgnoreCase("atendimento presencial")){
            salvarAgenda(tipo, controleloja.getIdcontroleLoja());
        }
        followup.setDataProximoContato(dataProximoContatojDateChooser.getDate());
        followup.setSituacao(proximoEventojComboBox.getSelectedItem().toString());
        followup.setHistorico(historicojTextArea.getText());
        if (horajFormattedTextField.isEnabled()) {
            try {
                followup.setHoraproximocontato(Formatacao.converterStringHora(horajFormattedTextField.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(FrmCadastrarFollowUp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else {
            try {
                followup.setHoraproximocontato(Formatacao.converterStringHora("00:00"));
            } catch (ParseException ex) {
                Logger.getLogger(FrmCadastrarHistorico.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        FollowupController followupController = new FollowupController();
        followup = followupController.salvar(followup);
        this.telaHistorico.setModelHistorico(followup);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void proximoEventojComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_proximoEventojComboBoxItemStateChanged
         String tipo = proximoEventojComboBox.getSelectedItem().toString();
        if (tipo.equalsIgnoreCase("agendamento")){
            horajFormattedTextField.setEnabled(true);
        }else if (tipo.equalsIgnoreCase("processo")){
            horajFormattedTextField.setEnabled(true);
        }else if (tipo.equalsIgnoreCase("atendimento presencial")){
            horajFormattedTextField.setEnabled(true);
        }else horajFormattedTextField.setEnabled(false);
        
    }//GEN-LAST:event_proximoEventojComboBoxItemStateChanged

    private void proximoEventojComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proximoEventojComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proximoEventojComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox consultorjComboBox;
    private com.toedter.calendar.JDateChooser dataProximoContatojDateChooser;
    private javax.swing.JTextArea historicojTextArea;
    private javax.swing.JFormattedTextField horajFormattedTextField;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox proximoEventojComboBox;
    // End of variables declaration//GEN-END:variables
    public void inicializa(){
        UsuarioController usuarioController = new UsuarioController();
        List<Usuario> listaUsuario = usuarioController.listaUsuario();
        if (listaUsuario==null){
            listaUsuario = new ArrayList<Usuario>();
        }
        consultorjComboBox = Formatacao.preencherComobox(listaUsuario, consultorjComboBox, true, "Consultor");
        try {           
            horajFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (ParseException ex) {
            Logger.getLogger(FrmCadastrarHistorico.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (controleloja!=null){
            historicojTextArea.setText(controleloja.getHistorico());
            proximoEventojComboBox.setSelectedItem(controleloja.getHistorico());
            horajFormattedTextField.setText(new SimpleDateFormat("HH:mm").format(controleloja.getHora()));
            dataProximoContatojDateChooser.setDate(controleloja.getData());
            Usuario usuario = usuarioController.consultar(followup.getUsuario());
            consultorjComboBox.setSelectedItem(usuario);
        }
        historicojTextArea.requestFocus();
    }
    
    public void salvarAgenda(String tipo, int idControleLoja){
        AgendaController agendaController = new AgendaController();
        Agenda agenda = agendaController.consultarControle(idControleLoja);
        if (agenda==null){
            agenda = new Agenda();
        }
        agenda.setCliente(cliente.getIdcliente());
        agenda.setData(dataProximoContatojDateChooser.getDate());
        agenda.setEvento(tipo + " - " + cliente.getNome());
        try {
            agenda.setHora(Formatacao.converterStringHora(horajFormattedTextField.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(FrmCadastrarHistorico.class.getName()).log(Level.SEVERE, null, ex);
        }
        agenda.setQuemAgendou(usuarioLogadoBean.getUsuario().getNome());
        agenda.setSituacao("Agendado");
        agenda.setUnidadenegocio(usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio());
        Usuario user = (Usuario) consultorjComboBox.getSelectedItem();
        agenda.setUsuario(user.getIdusuario());
        agendaController.salvar(agenda);
    }

}
