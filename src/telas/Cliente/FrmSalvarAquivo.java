/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmLocalizarArquivo.java
 *
 * Created on 15/03/2011, 11:47:17
 */

package telas.Cliente;

import controller.FtpDadosController;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Ftpdados;
import model.view.Viewconsultaarquivo;
import telas.Arquivo.FrmCadastarArquivo;
import telas.Arquivo.FrmConsultaArquivos;
import telas.Usuarios.UsuarioLogadoBean;
import util.Ftp;


/**
 *
 * @author wolverine
 */
public class FrmSalvarAquivo extends javax.swing.JFrame {
    
    private  Viewconsultaarquivo arquivo;
    private File file;

  
    /** Creates new form FrmLocalizarArquivo */
    public FrmSalvarAquivo(Viewconsultaarquivo arquivo, UsuarioLogadoBean usuarioLogadoBean) {
        this.arquivo = arquivo;
        initComponents();
        String local;
        if (usuarioLogadoBean.getUsuario().getLocalsalvar()!=null){
            local = usuarioLogadoBean.getUsuario().getLocalsalvar();
        }else local = System.getProperty("user.dir");
        File novo = new File(local + "\\" + arquivo.getNomeArquivo());
        carregarjFileChooser.setFileFilter(null);
        carregarjFileChooser.setSelectedFile(novo);
        URL url = this.getClass().getResource("/imagens/logo/logotela.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        setVisible(true);
    }
    
    
    
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        carregarjFileChooser = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Salvar Arquivo");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        carregarjFileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        carregarjFileChooser.setCurrentDirectory(null);
        carregarjFileChooser.setDialogTitle("Salvar Arquivo");
        carregarjFileChooser.setSelectedFile(new java.io.File("C:\\Program Files\\NetBeans 7.4\\teste"));
        carregarjFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregarjFileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(carregarjFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(carregarjFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void carregarjFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregarjFileChooserActionPerformed
        file = carregarjFileChooser.getSelectedFile();
        String nomeArquivoFTP = String.valueOf(arquivo.getVendasIdvendas()+"_" + arquivo.getNomeArquivo());
        String nomeArquivoLocal = file.getAbsolutePath();
        if (salvarArquivoFTP(nomeArquivoLocal, nomeArquivoFTP)) {
            this.dispose();;
        }else JOptionPane.showMessageDialog(rootPane,"Erro Salvar Arquivo");
    }//GEN-LAST:event_carregarjFileChooserActionPerformed

    /**
    * @param args the command line arguments
    */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser carregarjFileChooser;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

public boolean salvarArquivoFTP(String nomeArquivoLocal, String nomeArquivoFTP){
        FtpDadosController ftpDadosController = new FtpDadosController();
        Ftpdados dadosFTP = ftpDadosController.getFTPDados();
        if (dadosFTP==null){
            return false;
        }
        Ftp ftp = new Ftp(dadosFTP.getHost(),dadosFTP.getUser(), dadosFTP.getPassword());
        try {
            if (!ftp.conectar()){
                JOptionPane.showMessageDialog(rootPane, "Erro conectar FTP");
                return false;
            }
        } catch (IOException ex) {
            Logger.getLogger(FrmCadastarArquivo.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro conectar FTP " + ex);
        }
        try {
            ftp.receberArquivo(nomeArquivoLocal, nomeArquivoFTP);
        } catch (IOException ex) {
            Logger.getLogger(FrmConsultaArquivos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro Salvar Arquivo " + ex);
            return false;
        }
        try {
            ftp.desconectar();
        } catch (IOException ex) {
            Logger.getLogger(FrmCadastarArquivo.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro desconectar FTP " +ex);
            return false;
        }
        return true;
        
    }


}
