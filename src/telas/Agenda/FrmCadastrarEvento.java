/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.Agenda;

import com.toedter.calendar.JTextFieldDateEditor;
import controller.AgendaController;
import controller.ClienteController;
import controller.UsuarioController;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Agenda;
import model.Cliente;
import model.Usuario;
import telas.Cliente.FrmConsultaCliente;
import telas.Usuarios.UsuarioLogadoBean;
import util.Formatacao;
import util.LimiteTextoJedit;

/**
 *
 * @author Wolverine
 */
public class FrmCadastrarEvento extends javax.swing.JFrame implements IAgenda{
    
    private String datePattern;
    private String maskPattern;
    private char placeHolder;
    private Agenda agenda;
    private UsuarioLogadoBean usuarioLogadoBean;
    private Cliente cliente;
    private String caracteres = "0987654321-()";
    
    

    /**
     * Creates new form FrmCadastrarEvento
     */
    public FrmCadastrarEvento(UsuarioLogadoBean usuarioLogadoBean, Agenda agenda, Date dataAgenda) {
        this.usuarioLogadoBean = usuarioLogadoBean;
        this.agenda = agenda;
        datePattern = "dd/MM/yyyy";
        maskPattern = "##/##/##";
        placeHolder = '_';
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo/logotela.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        dataAgendajDateChooser.setDate(dataAgenda);
        inicializar();
        limitarJText();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        dataAgendajDateChooser = new com.toedter.calendar.JDateChooser(null, null, datePattern, new JTextFieldDateEditor(datePattern,
            maskPattern, placeHolder));
    jLabel1 = new javax.swing.JLabel();
    horajFormattedTextField = new javax.swing.JFormattedTextField();
    jLabel2 = new javax.swing.JLabel();
    nomeClientejTextField = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    consultorjComboBox = new javax.swing.JComboBox();
    eventojTextField = new javax.swing.JTextField();
    jLabel4 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    jButton1 = new javax.swing.JButton();
    emailjTextField = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    foneResidencialjCheckBox = new javax.swing.JCheckBox();
    foneCelularjCheckBox = new javax.swing.JCheckBox();
    foneComercialjCheckBox = new javax.swing.JCheckBox();
    foneResidencialjTextField = new javax.swing.JTextField();
    foneCelularjTextField = new javax.swing.JTextField();
    foneComercialjTextField = new javax.swing.JTextField();
    jPanel4 = new javax.swing.JPanel();
    jButton2 = new javax.swing.JButton();
    jButton3 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Cadastrar Evento");

    jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    dataAgendajDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dataAgendajDateChooserFocusGained(evt);
        }
    });

    jLabel1.setText("Data");

    jLabel2.setText("Hora");

    jLabel3.setText("Pesquisar Cliente");

    jLabel4.setText("Consultor");

    jLabel5.setText("Evento");

    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/selecionar.png"))); // NOI18N
    jButton1.setText("Selecionar");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jLabel6.setText("E-mail");

    foneResidencialjCheckBox.setText("9-Fone Residencial");
    foneResidencialjCheckBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            foneResidencialjCheckBoxItemStateChanged(evt);
        }
    });

    foneCelularjCheckBox.setText("9-Fone Celular");
    foneCelularjCheckBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            foneCelularjCheckBoxItemStateChanged(evt);
        }
    });

    foneComercialjCheckBox.setText("9-Fone Comercial");
    foneComercialjCheckBox.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            foneComercialjCheckBoxItemStateChanged(evt);
        }
    });

    foneResidencialjTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            foneResidencialjTextFieldFocusLost(evt);
        }
    });
    foneResidencialjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            foneResidencialjTextFieldKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            foneResidencialjTextFieldKeyTyped(evt);
        }
    });

    foneCelularjTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            foneCelularjTextFieldFocusLost(evt);
        }
    });
    foneCelularjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            foneCelularjTextFieldKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            foneCelularjTextFieldKeyTyped(evt);
        }
    });

    foneComercialjTextField.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            foneComercialjTextFieldFocusLost(evt);
        }
    });
    foneComercialjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            foneComercialjTextFieldKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            foneComercialjTextFieldKeyTyped(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dataAgendajDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(horajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(eventojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(consultorjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(nomeClientejTextField)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton1))))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(foneResidencialjCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(foneResidencialjTextField))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(foneCelularjCheckBox)
                            .addGap(15, 15, 15)
                            .addComponent(foneComercialjCheckBox))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(foneCelularjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(foneComercialjTextField)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(emailjTextField))))
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(9, 9, 9)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel5))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(horajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(eventojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(dataAgendajDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(11, 11, 11)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3))
                    .addGap(26, 26, 26))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(consultorjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(jLabel6))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foneResidencialjCheckBox)
                    .addComponent(foneCelularjCheckBox)
                    .addComponent(foneComercialjCheckBox)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(emailjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foneResidencialjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foneCelularjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foneComercialjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/confirmar.png"))); // NOI18N
    jButton2.setText("Confirmar");
    jButton2.setToolTipText("Confirmar Cadastro de Cliente");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botozinhos/cancel.png"))); // NOI18N
    jButton3.setText("Cancelar");
    jButton3.setToolTipText("Cancela Cadastro de Cliente");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(30, 30, 30)
            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton2)
                .addComponent(jButton3))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createSequentialGroup()
                    .addGap(113, 113, 113)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dataAgendajDateChooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataAgendajDateChooserFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_dataAgendajDateChooserFocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String msg = validarAgenda();
        if (msg.length()>5){
            JOptionPane.showMessageDialog(rootPane, msg);
        }else {
            salvarCliente();
            salvarAgenda();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new FrmConsultaCliente(this.usuarioLogadoBean, this);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void foneResidencialjCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_foneResidencialjCheckBoxItemStateChanged
        foneResidencialjTextField.setText("");
        foneResidencialjTextField.requestFocus();
    }//GEN-LAST:event_foneResidencialjCheckBoxItemStateChanged

    private void foneCelularjCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_foneCelularjCheckBoxItemStateChanged
        foneCelularjTextField.setText("");
        foneCelularjTextField.requestFocus();
    }//GEN-LAST:event_foneCelularjCheckBoxItemStateChanged

    private void foneComercialjCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_foneComercialjCheckBoxItemStateChanged
        foneComercialjTextField.setText("");
        foneComercialjTextField.requestFocus();
    }//GEN-LAST:event_foneComercialjCheckBoxItemStateChanged

    private void foneResidencialjTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_foneResidencialjTextFieldFocusLost
        caracteres = "0987654321-()";
    }//GEN-LAST:event_foneResidencialjTextFieldFocusLost

    private void foneCelularjTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_foneCelularjTextFieldFocusLost
        caracteres = "0987654321-()";
    }//GEN-LAST:event_foneCelularjTextFieldFocusLost

    private void foneComercialjTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_foneComercialjTextFieldFocusLost
        caracteres = "0987654321-()";
    }//GEN-LAST:event_foneComercialjTextFieldFocusLost

    private void foneResidencialjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foneResidencialjTextFieldKeyTyped
        if (evt.getKeyChar()=='.'){
            evt.setKeyChar(',');
        }
        if (evt.getKeyChar() != '\b') {
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_foneResidencialjTextFieldKeyTyped

    private void foneCelularjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foneCelularjTextFieldKeyTyped
        if (evt.getKeyChar()=='.'){
            evt.setKeyChar(',');
        }
        if (evt.getKeyChar() != '\b') {
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_foneCelularjTextFieldKeyTyped

    private void foneComercialjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foneComercialjTextFieldKeyTyped
        if (evt.getKeyChar()=='.'){
            evt.setKeyChar(',');
        }
        if (evt.getKeyChar() != '\b') {
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_foneComercialjTextFieldKeyTyped

    private void foneResidencialjTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foneResidencialjTextFieldKeyPressed
        if ((evt.getKeyCode() != KeyEvent.VK_DELETE) && (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)) {
            String texto = foneResidencialjTextField.getText();
            if (foneResidencialjTextField.getText().length() == 0) {
                foneResidencialjTextField.setText("(");
            } else if (foneResidencialjTextField.getText().length() == 3) {
                foneResidencialjTextField.setText(foneResidencialjTextField.getText() + ")");
            }
            if (foneResidencialjCheckBox.isSelected()) {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneResidencialjTextField.getText().length() == 8) {
                        foneResidencialjTextField.setText(foneResidencialjTextField.getText() + '-');
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneResidencialjTextField.getText().length() == 9) {
                            foneResidencialjTextField.setText(foneResidencialjTextField.getText() + '-');
                        }
                    }
                }
            } else {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneResidencialjTextField.getText().length() == 9) {
                        foneResidencialjTextField.setText(foneResidencialjTextField.getText() + '-');
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneResidencialjTextField.getText().length() == 8) {
                            foneResidencialjTextField.setText(foneResidencialjTextField.getText() + '-');
                        }
                    }
                }
            }
            if (foneResidencialjCheckBox.isSelected()) {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneResidencialjTextField.getText().length() > 12) {
                        caracteres = "";
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneResidencialjTextField.getText().length() > 13) {
                            caracteres = "";
                        }
                    }
                }

            } else {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneResidencialjTextField.getText().length() > 13) {
                        caracteres = "";
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneResidencialjTextField.getText().length() > 12) {
                            caracteres = "";
                        }
                    }
                }
            }
        }else {
            foneResidencialjTextField.setText("");
        }
    }//GEN-LAST:event_foneResidencialjTextFieldKeyPressed

    private void foneCelularjTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foneCelularjTextFieldKeyPressed
        if ((evt.getKeyCode() != KeyEvent.VK_DELETE) && (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)) {
            String texto = foneCelularjTextField.getText();
            if (foneCelularjTextField.getText().length() == 0) {
                foneCelularjTextField.setText("(");
            } else if (foneCelularjTextField.getText().length() == 3) {
                foneCelularjTextField.setText(foneCelularjTextField.getText() + ")");
            }
            if (foneCelularjCheckBox.isSelected()) {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneCelularjTextField.getText().length() == 8) {
                        foneCelularjTextField.setText(foneCelularjTextField.getText() + '-');
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneCelularjTextField.getText().length() == 9) {
                            foneCelularjTextField.setText(foneCelularjTextField.getText() + '-');
                        }
                    }
                }
            } else {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneCelularjTextField.getText().length() == 9) {
                        foneCelularjTextField.setText(foneCelularjTextField.getText() + '-');
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneCelularjTextField.getText().length() == 8) {
                            foneCelularjTextField.setText(foneCelularjTextField.getText() + '-');
                        }
                    }
                }
            }
            if (foneCelularjCheckBox.isSelected()) {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneCelularjTextField.getText().length() > 12) {
                        caracteres = "";
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneCelularjTextField.getText().length() > 13) {
                            caracteres = "";
                        }
                    }
                }

            } else {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneCelularjTextField.getText().length() > 13) {
                        caracteres = "";
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneCelularjTextField.getText().length() > 12) {
                            caracteres = "";
                        }
                    }
                }
            }
        }else {
            foneCelularjTextField.setText("");
        }
    }//GEN-LAST:event_foneCelularjTextFieldKeyPressed

    private void foneComercialjTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foneComercialjTextFieldKeyPressed
        if ((evt.getKeyCode() != KeyEvent.VK_DELETE) && (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)) {
            String texto = foneComercialjTextField.getText();
            if (foneComercialjTextField.getText().length() == 0) {
                foneComercialjTextField.setText("(");
            } else if (foneComercialjTextField.getText().length() == 3) {
                foneComercialjTextField.setText(foneComercialjTextField.getText() + ")");
            }
            if (foneComercialjCheckBox.isSelected()) {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneComercialjTextField.getText().length() == 8) {
                        foneComercialjTextField.setText(foneComercialjTextField.getText() + '-');
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneComercialjTextField.getText().length() == 9) {
                            foneComercialjTextField.setText(foneComercialjTextField.getText() + '-');
                        }
                    }
                }
            } else {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneComercialjTextField.getText().length() == 9) {
                        foneComercialjTextField.setText(foneComercialjTextField.getText() + '-');
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneComercialjTextField.getText().length() == 8) {
                            foneComercialjTextField.setText(foneComercialjTextField.getText() + '-');
                        }
                    }
                }
            }
            if (foneComercialjCheckBox.isSelected()) {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneComercialjTextField.getText().length() > 12) {
                        caracteres = "";
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneComercialjTextField.getText().length() > 13) {
                            caracteres = "";
                        }
                    }
                }

            } else {
                if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 9) {
                    if (foneComercialjTextField.getText().length() > 13) {
                        caracteres = "";
                    }
                } else {
                    if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone() == 8) {
                        if (foneComercialjTextField.getText().length() > 12) {
                            caracteres = "";
                        }
                    }
                }
            }
        }else {
            foneComercialjTextField.setText("");
        }
    }//GEN-LAST:event_foneComercialjTextFieldKeyPressed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox consultorjComboBox;
    private com.toedter.calendar.JDateChooser dataAgendajDateChooser;
    private javax.swing.JTextField emailjTextField;
    private javax.swing.JTextField eventojTextField;
    private javax.swing.JCheckBox foneCelularjCheckBox;
    private javax.swing.JTextField foneCelularjTextField;
    private javax.swing.JCheckBox foneComercialjCheckBox;
    private javax.swing.JTextField foneComercialjTextField;
    private javax.swing.JCheckBox foneResidencialjCheckBox;
    private javax.swing.JTextField foneResidencialjTextField;
    private javax.swing.JFormattedTextField horajFormattedTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField nomeClientejTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setCliente(Cliente cliente) {
        if (cliente!=null){
            this.cliente = cliente;
            nomeClientejTextField.setText(cliente.getNome());
            foneResidencialjTextField.setText(cliente.getFoneResidencial());
            foneCelularjTextField.setText(cliente.getFoneCelular());
            foneComercialjTextField.setText(cliente.getFoneComercial());
            emailjTextField.setText(cliente.getEmail());
        }
    }
    
    public void salvarCliente(){
        if (cliente==null){
            cliente = new Cliente();
            cliente.setDataCadastro(new Date());
            cliente.setUnidadenegocio(usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio());
        }
        cliente.setNome(nomeClientejTextField.getText());
        cliente.setFoneResidencial(foneResidencialjTextField.getText());
        cliente.setFoneCelular(foneCelularjTextField.getText());
        cliente.setFoneComercial(foneComercialjTextField.getText());
        cliente.setEmail(emailjTextField.getText());
        cliente.setTipoCliente("FollowUp");
        ClienteController clienteController = new ClienteController();
        cliente = clienteController.salvar(cliente);
    }
    
    public void salvarAgenda(){
        if (agenda==null){
            agenda = new Agenda();
        }
        agenda.setCliente(cliente.getIdcliente());
        agenda.setData(dataAgendajDateChooser.getDate());
        agenda.setEvento(eventojTextField.getText());
        try {
            agenda.setHora(Formatacao.converterStringHora(horajFormattedTextField.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(FrmCadastrarEvento.class.getName()).log(Level.SEVERE, null, ex);
        }
        agenda.setQuemAgendou(usuarioLogadoBean.getUsuario().getNome());
        agenda.setUnidadenegocio(usuarioLogadoBean.getUnidadeNegocio().getIdunidadeNegocio());
        Usuario user = (Usuario) consultorjComboBox.getSelectedItem();
        agenda.setUsuario(user.getIdusuario());
        agenda.setSituacao("Agendado");
        AgendaController agendaController = new AgendaController();
        agendaController.salvar(agenda);
        this.dispose();
    }
    
    public String validarAgenda(){
        String msg="";
        if (dataAgendajDateChooser.getDate()==null){
            msg = "Data agendamento invalida\r\n";
        }
        if (horajFormattedTextField.getText().length()==0){
            msg = "Hora do agendamento invalida\r\n";
        }
        if (nomeClientejTextField.getText().length()==0){
            msg = "Nome do cliente não preenchido\r\n";
        }
        if (emailjTextField.getText().length()==0){
            msg = "Email do  cliente não preenchido";
        }
        return msg;
    }
    
    public void inicializar(){
        UsuarioController usuarioController = new UsuarioController();
        List<Usuario> listaUsuario = usuarioController.listaUsuario();
        if (listaUsuario==null){
            listaUsuario = new ArrayList<Usuario>();
        }
        if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone()==8){
                foneResidencialjCheckBox.setText("9-Fone Residencial");
                foneCelularjCheckBox.setText("9-Fone Celular");
                foneComercialjCheckBox.setText("9-Fone Comercial");
        }else {
                foneResidencialjCheckBox.setText("8-Fone Residencial");
                foneCelularjCheckBox.setText("8-Fone Celular");
                foneComercialjCheckBox.setText("8-Fone Comercial");
        }
        consultorjComboBox = Formatacao.preencherComobox(listaUsuario, consultorjComboBox, true, "Consultor");
        horajFormattedTextField.setText(new SimpleDateFormat("HH:mm").format(new Date()));
        dataAgendajDateChooser.requestFocus();
        if (agenda!=null){
            dataAgendajDateChooser.setDate(agenda.getData());
            horajFormattedTextField.setText(new SimpleDateFormat("HH:mm").format(agenda.getHora()));
            eventojTextField.setText(agenda.getEvento());
            ClienteController clienteController = new ClienteController();
            cliente = clienteController.consultar(agenda.getCliente());
            nomeClientejTextField.setText(cliente.getNome());
            foneComercialjTextField.setText(cliente.getFoneComercial());
            foneResidencialjTextField.setText(cliente.getFoneResidencial());
            foneCelularjTextField.setText(cliente.getFoneCelular());
            emailjTextField.setText(cliente.getEmail());
        }
    }
    
//    public void  setMascaras(){
//        try {
//            if (usuarioLogadoBean.getUnidadeNegocio().getDigitosTelefone()==9){
//                foneComercialjFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
//                fonecelularjFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
//                foneResidencialjFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));           
//                foneResidencialjCheckBox.setText("9-Fone Residencial");
//                foneCelularjCheckBox.setText("9-Fone Celular");
//                foneComercialjCheckBox.setText("9-Fone Comercial");
//            }else {
//                foneComercialjFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
//                fonecelularjFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
//                foneResidencialjFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));           
//                foneResidencialjFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));           
//                foneResidencialjCheckBox.setText("8-Fone Residencial");
//                foneCelularjCheckBox.setText("8-Fone Celular");
//                foneComercialjCheckBox.setText("8-Fone Comercial");
//            }
//            horajFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));           
//        } catch (ParseException ex) {
//            Logger.getLogger(FrmCadastrarCliente.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }

    @Override
    public void setEvento() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setFiltro(int consultor, int UnidadeNegocio, String hora) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    public void limitarJText() {
        eventojTextField.setDocument(new LimiteTextoJedit(100));
        foneResidencialjTextField.setDocument(new LimiteTextoJedit(14));
        foneCelularjTextField.setDocument(new LimiteTextoJedit(14));
        foneComercialjTextField.setDocument(new LimiteTextoJedit(14));
        emailjTextField.setDocument(new LimiteTextoJedit(14));        
                
    }
}
