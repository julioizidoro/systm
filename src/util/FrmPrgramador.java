/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package util;

import controller.ArquivosController;
import controller.ClienteController;
import controller.CursosController;
import controller.FollowupController;
import controller.FornecedorCidadeController;
import controller.FtpDadosController;
import controller.ModeloOrcamentoCursoController;
import controller.OrcamentoCursoController;
import controller.SeguroViagemController;
import controller.VendasController;
import dao.VendasDao;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Arquivos;
import model.Cliente;
import model.Cursos;
import model.Fornecedorcidade;
import model.Ftpdados;
import model.Modeloorcamentocurso;
import model.Orcamentocurso;
import model.Seguroviagem;
import model.Vendas;
import model.view.Viewcliente;
import model.view.Viewconsultaarquivo;
import model.view.Viewcosultafollowup;
import telas.Arquivo.FrmCadastarArquivo;
import telas.Comissao.ComissaoCursos;
import telas.Comissao.ComissaoSeguro;

/**
 *
 * @author Wolverine
 */
public class FrmPrgramador extends javax.swing.JFrame {

    /**
     * Creates new form FrmPrgramador
     */
    public FrmPrgramador() {
        initComponents();
        URL url = this.getClass().getResource("/imagens/logo/logotela.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        idjTextField = new javax.swing.JTextField();
        idfinaljTextField = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Desenvolvimento");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton2.setText("Cliente Unidade");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cliente Unidade FollowUp");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Gerar Arquivos");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Vendas");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Or√ßamento");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Modelo");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Email");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Teste data");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Comissao");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(idjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(idfinaljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5)
                            .addComponent(jButton8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton9)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton10))
                            .addComponent(jButton7))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idfinaljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(jButton10))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jButton1.setText("Fechar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(jButton1)
                .addContainerGap(176, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ClienteController clienteController = new ClienteController();
        String sql = "select c from Viewcliente c where c.nome like '%" + " " + "%' order by c.nome";
        List<Viewcliente> lista = clienteController.listar(sql);
        if (lista!=null){
            VendasDao vendasDao = new VendasDao();
            for(int i=0;i<lista.size();i++){
                try {
                    Vendas venda = vendasDao.vendaCliente(lista.get(i).getIdcliente());
                    if (venda!=null){
                        Cliente clietne = clienteController.consultar(venda.getCliente());
                        clietne.setUnidadenegocio(venda.getUnidadenegocio());
                        clietne = clienteController.salvar(clietne);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(FrmPrgramador.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, " Terminou");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        FollowupController followupController = new FollowupController();
        ClienteController clienteController = new ClienteController();
        List<Viewcosultafollowup> lista = followupController.listaFollowup("Select a From Viewcosultafollowup a");
        if (lista != null) {
            for (int i = 0; i < lista.size(); i++) {
                Cliente clietne = clienteController.consultar(lista.get(i).getIdcliente());
                clietne.setUnidadenegocio(lista.get(i).getUnidadeNegocioidunidadeNegocio());
                clietne = clienteController.salvar(clietne);
            }
        }
        JOptionPane.showMessageDialog(rootPane, "TErminou");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        ArquivosController arquivosController = new ArquivosController();
        List<Viewconsultaarquivo> lista = arquivosController.listar("Select v From Viewconsultaarquivo v where v.idarquivos>" + Integer.parseInt(idjTextField.getText()) + "and v.idarquivos<" +
                Integer.parseInt(idfinaljTextField.getText()) + " order by idarquivos");
        if (lista!=null){
            for(int i=0;i<lista.size();i++){
                Arquivos arquivo = arquivosController.consultar(lista.get(i).getIdarquivos());
                if (arquivo!=null){
                    String nomeArquivoFTP =arquivo.getVenda() + "_"+ arquivo.getNomeArquivo();
                    String nomeArquivoLocal= "C:\\ftp\\" + arquivo.getNomeArquivo();
                    gerarArquivoFisico(arquivo, nomeArquivoFTP);
                    System.out.println(nomeArquivoFTP + " - " + String.valueOf(arquivo.getIdarquivos()));
                    //salvarArquivoFTP(nomeArquivoLocal, nomeArquivoFTP, String.valueOf(i));
                }
            }
            JOptionPane.showMessageDialog(rootPane, "Terminou");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        VendasController vendasController = new VendasController();
        FornecedorCidadeController fornecedorCidadeController = new FornecedorCidadeController();
        List<Vendas> lista = vendasController.lista();
        if (lista!=null){
            for(int i=0;i<lista.size();i++){
                Vendas venda = lista.get(i);
                Fornecedorcidade fornecedorcidade = fornecedorCidadeController.getFonecedorCidade(venda.getFornecedor());
                if (fornecedorcidade!=null){
                    venda.setFornecedorcidade(fornecedorcidade);
                    vendasController.salvar(venda);
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, "Terminou");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        OrcamentoCursoController orcamentoCursoController = new OrcamentoCursoController();
        FornecedorCidadeController fornecedorCidadeController = new FornecedorCidadeController();
        List<Orcamentocurso> lista = orcamentoCursoController.listarOrcamentoCurso();
        if (lista!=null){
            for(int i=0;i<lista.size();i++){
                Orcamentocurso orcamentocurso = lista.get(i);
                Fornecedorcidade fornecedorcidade = fornecedorCidadeController.getFonecedorCidade(orcamentocurso.getFornecedor());
                if (fornecedorcidade!=null){
                    orcamentocurso.setFornecedorcidade(fornecedorcidade);
                    orcamentoCursoController.salvar(orcamentocurso);
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, "Terminou");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        ModeloOrcamentoCursoController modeloOrcamentoCursoController = new ModeloOrcamentoCursoController();
        FornecedorCidadeController fornecedorCidadeController = new FornecedorCidadeController();
        List<Modeloorcamentocurso> lista = modeloOrcamentoCursoController.listarModeloOrcamentoCurso();
        if (lista!=null){
            for(int i=0;i<lista.size();i++){
                Modeloorcamentocurso modelo = lista.get(i);
                Fornecedorcidade fornecedorcidade = fornecedorCidadeController.getFonecedorCidade(modelo.getFornecedor());
                if (fornecedorcidade!=null){
                    modelo.setFornecedorcidade(fornecedorcidade);
                    modeloOrcamentoCursoController.salvar(modelo);
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, "Terminou");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        EnviarEmailBean enviarEmailBean = new EnviarEmailBean();
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        Formatacao.calcularPrevisaoPagamentoFornecedor(new Date(), 1, 9);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idfinaljTextField;
    private javax.swing.JTextField idjTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public boolean salvarArquivoFTP(String nomeArquivoLocal, String nomeArquivoFTP, String idVendas){
        FtpDadosController ftpDadosController = new FtpDadosController();
        Ftpdados dadosFTP = ftpDadosController.getFTPDados();
        if (dadosFTP==null){
            return false;
        }
        Ftp ftp = new Ftp(dadosFTP.getHost(),dadosFTP.getUser(), dadosFTP.getPassword());
        try {
            if (!ftp.conectar()){
                JOptionPane.showMessageDialog(rootPane, "Erro conectar FTP");
                return false;
            }
        } catch (IOException ex) {
            Logger.getLogger(FrmCadastarArquivo.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro conectar FTP " + ex);
        }
        try {
            String msg = ftp.enviarArquivo(nomeArquivoLocal, nomeArquivoFTP);
            System.out.println(msg + " - " + nomeArquivoFTP + " - " + idVendas);
            return true;
        } catch (IOException ex) {
            Logger.getLogger(FrmCadastarArquivo.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro Salvar Arquivo " + ex);
        }
        try {
           ftp.desconectar();
        } catch (IOException ex) {
            Logger.getLogger(FrmCadastarArquivo.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro desconectar FTP " +ex);
        }
        return false;
    }
    
    public void gerarArquivoFisico(Arquivos arquivo, String nomeArquioFTP){
        String caminho = "C:\\ftp";
         String nomeArquivo = caminho + "\\" + nomeArquioFTP;
                File file = new File(nomeArquivo);
                FileOutputStream in = null;
                try {
                    in = new FileOutputStream(file);
                    //in.write(arquivo.getArquivo());
                    in.close();
                } catch (Exception ex) {
                    Logger.getLogger(FrmPrgramador.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Erro salvar arquivo " + ex);
                }
    }
}
